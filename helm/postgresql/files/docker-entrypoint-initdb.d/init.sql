CREATE OR REPLACE FUNCTION trigger_set_modified()
RETURNS TRIGGER AS $$
BEGIN
  NEW.last_updated = NOW();
  RETURN NEW;
END;$$LANGUAGE 'plpgsql';

CREATE TABLE proxy (
    id serial PRIMARY KEY,
    tenant_name varchar(50),
    base_path varchar(120),
    swagger jsonb,
    created_on TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    last_updated TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    UNIQUE(tenant_name, base_path)
);

CREATE TRIGGER set_modified
BEFORE UPDATE ON proxy
FOR EACH ROW
EXECUTE PROCEDURE trigger_set_modified();

-- Import the bootstrapped tenants
INSERT INTO proxy(tenant_name, base_path, swagger) VALUES ('gavin', '/api/petstore', '{"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.3","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string"},{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{"X-Expires-After":{"type":"string","format":"date-time","description":"date in UTC when token expires"},"X-Rate-Limit":{"type":"integer","format":"int32","description":"calls per hour allowed by the user"}},"schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"}}}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","description":"","operationId":"logoutUser","produces":["application/json","application/xml"],"parameters":[],"responses":{"default":{"description":"successful operation"}}}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithArrayInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"},"petstore_auth":{"type":"oauth2","authorizationUrl":"https://petstore.swagger.io/oauth/authorize","flow":"implicit","scopes":{"read:pets":"read your pets","write:pets":"modify pets in your account"}}},"definitions":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"xml":{"name":"tag"},"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}');
INSERT INTO proxy(tenant_name, base_path, swagger) VALUES ('gavin', '/api/music', '{"swagger":"2.0","info":{"version":"1.0","title":"API Central","contact":{"email":"support@axway.com"},"license":{"name":"Copyright Axway 2017. All rights reserved."}},"host":"prod-e4ec6c3369cdafa50169ce18e33d00bb.apicentral.axwayamplify.com","basePath":"/api/v1","schemes":["https"],"consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"paths":{"/applications/{applicationId}":{"get":{"tags":["Applications"],"summary":"Get an application","description":"Get the details of a single application. If the user is working within a team context, the\nrequested application must belong to the user''s currently selected team.\n","operationId":"getApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The retrieved application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Applications"],"summary":"Overwrite an application","description":"Overwrite an application completely. No details of the original application are retained other than the id.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"overwriteApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"application","description":"Application representation","required":true,"schema":{"$ref":"#/definitions/Application"}}],"responses":{"201":{"description":"The overwritten application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete an application","description":"Delete the specified application.  If the user is working within a team \ncontext, the application must belong to the user''s currently selected team.\n","operationId":"deleteApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"204":{"description":"The application was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/apis":{"get":{"tags":["API Proxy to Team Relationships"],"summary":"Get the list of API Proxy entities related to the given team","operationId":"getProxiesByTeam","parameters":[],"responses":{"200":{"description":"Proxies","schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamIdParam"}]},"/applications/{applicationId}/profiles/{profileId}":{"get":{"tags":["Applications"],"summary":"Get a Profile by Id","description":"Get a Profile for a specified application specified by Id.\n","operationId":"getProfileById","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"}],"responses":{"200":{"description":"The Profile specified by type for application","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Applications"],"summary":"Overwrite a Profile","description":"Overwrite a Profile for a specified application.\n","operationId":"overwriteProfile","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"},{"in":"body","name":"profile","description":"Profile representation","required":true,"schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}}],"responses":{"200":{"description":"The list of Profiles specified by type for application","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete a Profile","description":"Delete a Profile for a specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"deleteProfile","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"}],"responses":{"204":{"description":"The Profile deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/certChains/{certChainId}":{"get":{"tags":["Certificates"],"summary":"Gets a Cert Chain by ID","operationId":"getCertChain","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CertChain"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"put":{"tags":["Certificates"],"summary":"Overwrites Cert Chain","operationId":"overwriteCertChain","parameters":[{"$ref":"#/parameters/CertChainBodyParam"}],"responses":{"200":{"description":"Cert Chain overwritten","schema":{"$ref":"#/definitions/CertChain"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"delete":{"tags":["Certificates"],"summary":"Deletes Cert Chain","operationId":"deleteCertificates","parameters":[],"responses":{"204":{"description":"Cert Chain deleted"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"parameters":[{"name":"certChainId","in":"path","description":"The ID of the Cert Chain","required":true,"type":"string","maxLength":32,"minLength":32}]},"/runtimeGroupsRelationships/{teamId}/runtimeGroups/{runtimeGroupId}":{"put":{"tags":["RuntimeGroup Relationships"],"summary":"Set a relationsip item for the specific RuntimeGroup.","operationId":"setRuntimeGroupRelationship","parameters":[],"responses":{"200":{"description":"Ok"}}},"delete":{"tags":["RuntimeGroup Relationships"],"summary":"Remove a relationship item for the specific RuntimeGroup.","operationId":"deleteRuntimeGroupRelationship","parameters":[],"responses":{"204":{"description":"Ok"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/userInfo/token/revoke":{"post":{"tags":["User Info"],"summary":"Revoke own token","description":"A user calls this API at logout time to invalidate their own token. \n","operationId":"revokeToken","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"}],"responses":{"204":{"description":"The user''s token is revoked successfully"},"401":{"description":"Unauthorized, user failed to authenticate"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}":{"get":{"tags":["API Proxy"],"summary":"Gets an API proxy by ID","operationId":"getProxy","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"put":{"tags":["API Proxy"],"summary":"Overwrite an API proxy","operationId":"overwriteProxy","parameters":[{"in":"body","name":"proxy","description":"The changes to apply.","required":true,"schema":{"$ref":"#/definitions/APIProxy"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["API Proxy"],"summary":"Deletes an API proxy and all associated endpoints, policies, resources, and revisions.","operationId":"deleteProxy","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/serviceAccounts/{environmentId}/{serviceAccountType}":{"get":{"tags":["Service Accounts"],"summary":"Retrieve a Service Account","description":"Get the details of a single service account. Not supported for DOSA service accounts.\n","operationId":"getServiceAccountByEnvironmentIdAndType","parameters":[],"responses":{"200":{"description":"The retrieved service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/EnvironmentIdParam"},{"$ref":"#/parameters/ServiceAccountTypeParam"}]},"/apis":{"get":{"tags":["API Proxy"],"summary":"Returns a list of all API proxies.","operationId":"getProxies","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"},{"name":"expand","in":"query","description":"Name of the sub-collections data to expand in the response. \"revisions\" and \"externalReferences\" only is supported. For more than one sub-collections, use comma separated values.","required":false,"type":"string","format":"text"}],"responses":{"200":{"description":"Proxies","schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["API Proxy"],"summary":"Imports an API Proxy","operationId":"importProxy","consumes":["multipart/form-data"],"parameters":[{"name":"proxyName","in":"formData","description":"The API Proxy name","required":true,"type":"string","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},{"name":"type","in":"formData","description":"Spec type","required":true,"type":"string","format":"text","enum":["SWAGGER","OAS3"]},{"name":"specification","in":"formData","description":"Spec","required":true,"type":"file"},{"name":"resourcePath","in":"formData","description":"A path component that uniquely identifies this API proxy. The basePath of the Proxy. It must start with / followed by any  of [A-Za-z0-9] followed by dash, dot or underscore","required":true,"type":"string","maxLength":128,"pattern":"^(\\/[A-Za-z0-9_\\-\\.]+)+"},{"name":"url","in":"formData","description":"The URL from which specification is downloaded from. This will be fall back backend service url if no host is specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"backendUrl","in":"formData","description":"The backend service url to override the host specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"description","in":"formData","description":"The proxy description","required":false,"type":"string"},{"name":"owningTeamId","in":"formData","description":"The id of the owning team for this proxy.","required":false,"type":"string","maxLength":36,"minLength":32,"pattern":"^[\\w\\s-_()\\[\\]]*$"},{"name":"isInternal","in":"formData","description":"Flag to indicate if the target endpoint of this proxy lives in a managed hybrid environment or not","required":false,"type":"boolean","default":false}],"responses":{"201":{"description":"Returns the created API Proxy","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/bulkProxyExport":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy Export","operationId":"bulkProxyExport","produces":["application/octet-stream"],"parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"A list of errors, if any."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroups/{id}/deployments":{"get":{"tags":["RuntimeGroup"],"summary":"Retrieves all deployments for a given runtime group.","operationId":"getRuntimeGroupDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Runtime group not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"},{"$ref":"#/parameters/SearchQuery"}]},"/authnz":{"post":{"tags":["Runtime API Authorization"],"summary":"Validate that the credential is permitted to access the API proxy","description":"Ensures the team, application and credential are in an enabled\nstate and that the proxy is valid and not in a retired state.\n","operationId":"validateAccess","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"authorization","description":"API credential, credential type and proxy parameter","required":true,"schema":{"$ref":"#/definitions/Authorization"}}],"responses":{"200":{"description":"The application that has been successfully authorized for the API proxy access.\nThe application''s team data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"}},"security":[{"Bearer":[]}]}},"/applications/{applicationId}/apiaccess/{apiAccessId}":{"delete":{"tags":["Applications"],"summary":"Delete an API access","description":"Delete an API access for an specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.       \n","operationId":"deleteAPIAccess","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiAccessIdParam"}],"responses":{"204":{"description":"The API access deleted successfully"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/users":{"get":{"tags":["Teams"],"summary":"Get a team''s users","description":"Get all users that are members of a team. A team can have many users. \nA user may be a member of many teams.   \n","operationId":"getTeamUsers","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"A list of users that are members of the team","schema":{"title":"Users","type":"array","items":{"$ref":"#/definitions/User"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/teams/{teamId}/relationship":{"put":{"tags":["API Proxy to Team Relationships"],"summary":"Creates the relationship between a proxy and a team","operationId":"createProxyTeamRelationship","parameters":[],"responses":{"204":{"description":"OK"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"delete":{"tags":["API Proxy to Team Relationships"],"summary":"Deletes the relationship between a proxy and a team","operationId":"deleteProxyTeamRelationship","parameters":[],"responses":{"204":{"description":"OK"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/TeamIdParam"}]},"/apis/{proxyId}/revisions/{revision}/resources":{"get":{"tags":["API Proxy Resources"],"summary":"Lists the resource file for the API Proxy revision.","operationId":"getResourcesMetadata","parameters":[{"name":"type","in":"query","description":"resource type to filter by","required":false,"type":"string","maxLength":100},{"name":"name","in":"query","description":"resource name to filter by","required":false,"type":"string","maxLength":100}],"responses":{"200":{"description":"Returns the resource","schema":{"type":"array","items":{"$ref":"#/definitions/Resource"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"post":{"tags":["API Proxy Resources"],"summary":"Import an resource either from an external file.","operationId":"importResource","consumes":["multipart/form-data"],"parameters":[{"name":"name","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"type","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"file","in":"formData","description":"The uploaded file data","required":true,"type":"file"}],"responses":{"201":{"description":"Returns the resource definition","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/teams":{"get":{"tags":["Teams"],"summary":"List all teams","description":"List all teams     \n","operationId":"getTeams","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of teams","schema":{"title":"Teams","type":"array","items":{"$ref":"#/definitions/Team"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Teams"],"summary":"Create a team","description":"Create a team. A team may represent different concepts, e.g. a project\nteam that is developing APIs, a business unit, or, an external partner that is consuming APIs. \nUsers, applications, API proxies and runtime groups are associated with teams.\n","operationId":"createTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"team","description":"Team representation","required":true,"schema":{"$ref":"#/definitions/Team"}}],"responses":{"201":{"description":"The created team","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/listeners":{"get":{"tags":["Listeners"],"description":"List listeners","operationId":"listListeners","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"name":"name","in":"query","description":"Filter by listener name","required":false,"type":"string"}],"responses":{"200":{"description":"List of listeners","schema":{"title":"Listeners","type":"array","items":{"$ref":"#/definitions/Listener"}}}}},"post":{"tags":["Listeners"],"description":"Create a new listener","operationId":"createListener","parameters":[{"in":"body","name":"body","description":"Listener representation","required":true,"schema":{"$ref":"#/definitions/Listener"}}],"responses":{"201":{"description":"Listener","schema":{"$ref":"#/definitions/Listener"}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/revisions/{revision}/resources/{resourceId}/raw":{"get":{"tags":["API Proxy Resources"],"summary":"Return the specific resource payload","operationId":"getResourceRaw","produces":["application/octet-stream"],"parameters":[],"responses":{"200":{"description":"Returns the resource payload"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"},{"name":"resourceId","in":"path","description":"The resource id","required":true,"type":"string","maxLength":32,"minLength":32}]},"/applications/{applicationId}/apiKeys/{apiKeyId}":{"put":{"tags":["Applications"],"summary":"Overwrite an API key","description":"Overwrite the validity of an API key.\n","operationId":"overwriteAPIKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiKeyIdParam"},{"in":"body","name":"apiKey","description":"APIKey representation","required":true,"schema":{"$ref":"#/definitions/APIKey"}}],"responses":{"200":{"description":"The details of the API key that was overwritten","schema":{"$ref":"#/definitions/APIKey"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete an API key","description":"Delete an API key for an specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"deleteAPIKey","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiKeyIdParam"}],"responses":{"204":{"description":"The API key deleted successfully"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/featureFlagsStatus/{key}":{"get":{"tags":["Feature flags admin runtime operations"],"summary":"Checks if a feature flag key is allowed","operationId":"getFeatureFlagsStatusForKey","parameters":[],"responses":{"200":{"description":"In case the feature flag with the specified key is allowed for the specified instance id","schema":{"$ref":"#/definitions/FeatureFlagStatus"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/KeyParam"},{"$ref":"#/parameters/InstanceIdSearchQuery"}]},"/apis/{proxyId}/revisions":{"post":{"tags":["API Proxy Revision"],"summary":"Create a new proxy revision","operationId":"createProxyRevision","consumes":["multipart/form-data"],"parameters":[{"name":"specification","in":"formData","description":"The Swagger to import for the new revision","required":false,"type":"file"},{"name":"url","in":"formData","description":"The URL from which specification is downloaded from. This will be fall back backend service url if no host is specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"backendUrl","in":"formData","description":"The backend service url to override the host specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"revision","in":"formData","description":"The revision to clone.","required":true,"type":"integer","format":"int32"},{"name":"policy","in":"formData","description":"The client authorization policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"backendAuthPolicy","in":"formData","description":"The backend authorization policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"rateLimitingPolicy","in":"formData","description":"The rate limiting policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"isInternal","in":"formData","description":"Flag to indicate if the target endpoint of this proxy lives in a managed hybrid environment or not","required":false,"type":"boolean","default":false},{"name":"ignoreFields","in":"formData","description":"A list of fields to ignore when cloning a revision, use ResponsePolicies to remove backend authentication, RateLimitingPolicy to remove rate limiting policy","required":false,"type":"array","items":{"type":"string","enum":["ResponsePolicies","RateLimitingPolicy"]},"collectionFormat":"multi"}],"responses":{"201":{"description":"Returns the new proxy revision","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/apis/{proxyId}/revisions/{revision}/export":{"get":{"tags":["API Proxy Export"],"summary":"Exports a specific revision of an API proxy.","operationId":"exportProxyRevision","produces":["application/octet-stream"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"type":"file"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/runtimeGroups/{id}/deployments/{requestUrl}":{"get":{"tags":["RuntimeGroup"],"summary":"Retrieves the deployment that starts with the same resourcePath as the requestUrl query param.","operationId":"getRuntimeGroupDeploymentByRequestUrl","parameters":[],"responses":{"200":{"description":"We reponsd with the api deployment that is active for runtimeGroupId and the requestUrl.","schema":{"$ref":"#/definitions/APIDeployment"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"You retrieve this error if you don''t any deployment with resourcePath starting with the requestUrl."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"},{"$ref":"#/parameters/RequestUrl"}]},"/deployments/{id}":{"get":{"tags":["Api Deployment"],"summary":"Retrieves a deployment given its identifier","operationId":"getDeployment","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIDeployment"}},"400":{"description":"Bad Request."},"404":{"description":"Not found."}}},"delete":{"tags":["Api Deployment"],"summary":"Undeploys an api.","operationId":"undeployApi","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"}]},"/applications":{"get":{"tags":["Applications"],"summary":"List all applications","description":"List all applications. If the user is working within a team context, the\napplications returned will be those associated with the user''s currently selected team.\n","operationId":"getApplications","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of applications. The application''s team data is contained within the _embedded metadata.\n","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an application","description":"Create an application for a team. If the user is working within a team context, the\napplication must be created within the user''s currently selected team.\n","operationId":"createApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"application","description":"Application representation","required":true,"schema":{"$ref":"#/definitions/Application"}}],"responses":{"201":{"description":"The created application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/users/{userId}/applications":{"get":{"tags":["Users"],"summary":"Get a user''s applications","description":"Get the applications related to all the teams that the user is a member of\n","operationId":"getUserApplications","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The list of applications. Each application''s team data is contained within the _embedded metadata.","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/environments":{"get":{"tags":["Environments"],"summary":"Returns a list of all Environments.","operationId":"getAllEnvironments","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of Environments.","schema":{"title":"Environments","type":"array","items":{"$ref":"#/definitions/Environment"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Environments"],"summary":"Creates an Environment","operationId":"createEnvironment","parameters":[{"in":"body","name":"environment","description":"The representation of an Environment to create","required":true,"schema":{"$ref":"#/definitions/Environment"}}],"responses":{"201":{"description":"Environment was created successfully.","schema":{"$ref":"#/definitions/Environment"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}}},"/apis/{proxyId}/teams/relationships":{"get":{"tags":["API Proxy to Team Relationships"],"summary":"Get the list teams ids that are related to the proxy","operationId":"getProxyTeamRelationships","parameters":[],"responses":{"200":{"description":"Returns the IDs of associated team","schema":{"type":"array","items":{"type":"string"}}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/certChains":{"post":{"tags":["Certificates"],"summary":"Creates a Cert Chain","operationId":"createCertChain","parameters":[{"$ref":"#/parameters/CertChainBodyParam"}],"responses":{"201":{"description":"Cert Chain was created successfully","schema":{"$ref":"#/definitions/CertChain"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/roles":{"get":{"tags":["Roles"],"summary":"List all roles","description":"List all out-of-the-box and custom roles\n","operationId":"getRoles","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of roles. The related permissions are contained within the _embedded metadata for each role.","schema":{"title":"Roles","type":"array","items":{"$ref":"#/definitions/Role"}}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Roles"],"summary":"Create a role","description":"Create a new custom role. A role has a set of related permissions. \nA set of out-of-the-box roles are provided.      \n","operationId":"createRole","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"role","description":"Role representation","required":true,"schema":{"$ref":"#/definitions/Role"}}],"responses":{"201":{"description":"The created role. The related permissions are contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Role"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/revisions/{revision}/policies/verify-jwt-key":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the JWT Key policy body for a specific revision of the API proxy.","operationId":"getJwtKeyPolicy","parameters":[],"responses":{"200":{"description":"The requested details for JWT Key policy","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a JWT Key policy for a specific API proxy revision.","operationId":"overwriteJwtKeyPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/serviceAccounts/{serviceAccountClientId}":{"get":{"tags":["Service Accounts"],"summary":"Retrieve a Service Account","description":"Get the details of a single service account.\n","operationId":"getServiceAccount","parameters":[],"responses":{"200":{"description":"The retrieved service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Service Accounts"],"summary":"Delete a Service Account","description":"Delete a Service Account associated with a clientId.\n","operationId":"deleteServiceAccount","parameters":[],"responses":{"204":{"description":"The Service Account deleted successfully"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/ServiceAccountClientIdParam"}]},"/permissions":{"get":{"tags":["Permissions"],"summary":"List all permissions","description":"List custom and out-of-the-box permissions. No role information is returned.\n","operationId":"getPermissions","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of permissions","schema":{"title":"Permissions","type":"array","items":{"$ref":"#/definitions/Permission"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Permissions"],"summary":"Create a permission","description":"Create a new custom permission. Permissions are assigned to users through roles.\n","operationId":"createPermission","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"permission","description":"Permission representation","required":true,"schema":{"$ref":"#/definitions/Permission"}}],"responses":{"201":{"description":"The created permission","schema":{"$ref":"#/definitions/Permission"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/bulkSwaggerDownload":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy''s Swagger download","operationId":"bulkSwaggerDownload","produces":["application/zip"],"parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"A list of errors, if any."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/swaggers":{"post":{"tags":["Swagger Validation"],"summary":"Returns the content and warnings(if any) in the swagger passed as file","operationId":"readFromJsonStream","consumes":["application/octet-stream","multipart/form-data"],"parameters":[{"name":"specification","in":"formData","description":"The swagger file","required":true,"type":"file"}],"responses":{"200":{"description":"Ok","schema":{"$ref":"#/definitions/ValidatedSwagger"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroups":{"get":{"tags":["RuntimeGroups"],"summary":"Returns a list of all Runtime Groups.","operationId":"getRuntimeGroups","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of Runtime Groups.","schema":{"type":"array","items":{"$ref":"#/definitions/RuntimeGroup"}}},"400":{"description":"Wrong filtering parameters."}}},"post":{"tags":["RuntimeGroups"],"summary":"Creates a Runtime Group","operationId":"createRuntimeGroup","parameters":[{"in":"body","name":"runtimeGroup","description":"The representation of the Runtime Group to create","required":true,"schema":{"$ref":"#/definitions/RuntimeGroup"}}],"responses":{"201":{"description":"Runtime Group was created successfully.","schema":{"$ref":"#/definitions/RuntimeGroup"}},"409":{"description":"Duplicate Runtime Group name"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"}]},"/roles/{roleId}":{"get":{"tags":["Roles"],"summary":"Get a role","description":"Get role details\n","operationId":"getRole","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/RoleIdParam"}],"responses":{"200":{"description":"The retrieved role. The related permissions are contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Role"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/applications/{applicationId}/profiles":{"get":{"tags":["Applications"],"summary":"Retrieve Profiles","description":"Retrieve all the Profiles based on selected type for the specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getProfilesForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of Profiles specified by type for application","schema":{"title":"Profiles","type":"array","items":{}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create a Profile","description":"Create a Profile for a specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createProfileForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"profile","description":"Profile representation","required":true,"schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}}],"responses":{"201":{"description":"The created Profile","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/featureFlags/{featureFlagId}":{"get":{"tags":["Feature flags admin operations"],"summary":"Retrieves a feature flag given its identifier","operationId":"getFeatureFlag","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/FeatureFlag"}},"400":{"description":"Bad Request."},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"put":{"tags":["Feature flags admin operations"],"summary":"Override a Feature flag","operationId":"overrideFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlag"}}],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["Feature flags admin operations"],"summary":"Removes a feature flag","operationId":"removeFeatureFlag","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"patch":{"tags":["Feature flags admin operations"],"summary":"Override a Feature flag","operationId":"updateFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlagPatch"}}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"}]},"/publishedItems/{publishedItemId}":{"get":{"tags":["Published Catalog Items"],"summary":"Get published catalog item by id","operationId":"getPublishedItemById","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PublishedApiProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/PublishedItemIdParam"}]},"/apis/bulkPut":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk overwrite API proxies","operationId":"bulkOverwriteProxy","parameters":[{"in":"body","name":"proxies","description":"The changes to apply.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}}],"responses":{"200":{"description":"A list of errors, if any."},"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/revisions/{revision}/policies/be-auth-http-basic":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the HTTP Basic Auth policy body for a specific revision of the API proxy.","operationId":"getBasicAuthPolicy","parameters":[],"responses":{"200":{"description":"The requested details for HTTP Basic Auth policy","schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a HTTP Basic Auth policy for a specific API proxy revision.","operationId":"overwriteHttpBasicAuthPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/apis/{proxyId}/revisions/{revision}/policies/verify-oauth-token":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the Oauth policy for a specific revision of the API proxy.","operationId":"getOauthTokenPolicy","parameters":[],"responses":{"200":{"description":"The requested details for Oauth Token","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a Oauth policy for a specific revision of the API proxy.","operationId":"overwriteOauthTokenPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/apis/{proxyId}/revisions/{revision}/policies/verify-api-key":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the API Key policy body for a specific revision of the API proxy.","operationId":"getApiKeyPolicy","parameters":[],"responses":{"200":{"description":"The requested policy details for API Key policy","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite API Key policy for a specific API proxy revision.","operationId":"overwriteApiKeyPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/featureFlags/{featureFlagId}/overrides/{featureFlagOverrideId}":{"get":{"tags":["Feature flags admin operations on logical instances"],"summary":"Retrieves a feature flag override given its identifier and the feature flag identifier","operationId":"getFeatureFlagOverride","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/FeatureFlagOverride"}},"400":{"description":"Bad Request."},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found."}}},"put":{"tags":["Feature flags admin operations on logical instances"],"summary":"Update the feature flag override for the logical instance","operationId":"updateFeatureFlagOverride","parameters":[{"in":"body","name":"featureFlagOverride","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlagOverride"}}],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["Feature flags admin operations on logical instances"],"summary":"Removes a feature flag","operationId":"removeFeatureFlagForLogicalInstance","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"},{"$ref":"#/parameters/FeatureFlagOverrideIdParam"}]},"/featureFlags/{featureFlagId}/overrides":{"get":{"tags":["Feature flags admin operations on logical instances"],"summary":"Retrieves the list of the overriden feature flags for different tenant instance ids","operationId":"getLogicalInstancesFeatureFlags","parameters":[{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of feature flags overrides for tenant logical instance ids","headers":{"Link":{"type":"string","description":"Pagination relative URI links"}},"schema":{"type":"array","items":{"$ref":"#/definitions/FeatureFlagOverride"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Feature flags admin operations on logical instances"],"summary":"Override feature flag for a tenant logical instance id","operationId":"overrideFeatureFlagForLogicalInstance","parameters":[{"in":"body","name":"enabled","description":"Whether to allow or not a tenant logical instance to use the feature","required":true,"schema":{"$ref":"#/definitions/FeatureFlagOverride"}}],"responses":{"201":{"description":"Returns the created tenant feature flag override","schema":{"$ref":"#/definitions/FeatureFlagOverride"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Duplicate feature flag key"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"}]},"/users/{userId}":{"get":{"tags":["Users"],"summary":"Get a user","description":"Get the details of a single API Central user \n","operationId":"getUser","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The retrieved user details. The user''s team and role data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Users"],"summary":"Overwrite a user","description":"Overwrite a user completely. No details of the original user are retained other than the id.\nA user should belong to at least one team, or have one or more admin roles.\nA user cannot overwrite themselves.\n","operationId":"overwriteUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"},{"in":"body","name":"user","description":"User representation","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"The details of the user that was overwritten","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Users"],"summary":"Delete a user","description":"Delete the specified user. A user cannot delete themselves.\n","operationId":"deleteUser","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"204":{"description":"The user was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/publishedItems":{"get":{"tags":["Published Catalog Items"],"summary":"Returns a list of all published catalog items","operationId":"getPublishedItems","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/PublishedApiProxy"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/image":{"get":{"tags":["API Proxy Image"],"summary":"Gets the API Proxy image","operationId":"getProxyImage","produces":["image/jpeg","image/png"],"parameters":[],"responses":{"200":{"description":"OK"},"404":{"description":"Not Found, No image is associated to this proxy."}}},"post":{"tags":["API Proxy Image"],"summary":"Set the image for the frontend API. The maximum file size is set to 1024 Kb.","description":"Set the jpeg image to be associated with the API.","operationId":"setProxyImage","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"file","in":"formData","required":true,"type":"file"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"413":{"description":"Request Entity Too Large"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/featureFlags":{"get":{"tags":["Feature flags admin operations"],"summary":"Retrieves the list of the defined feature flags","operationId":"getFeatureFlags","parameters":[{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of feature flags","headers":{"Link":{"type":"string","description":"Pagination relative URI links"}},"schema":{"type":"array","items":{"$ref":"#/definitions/FeatureFlag"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Feature flags admin operations"],"summary":"Creates a new feature flag","operationId":"createFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The feature flag resource","required":true,"schema":{"$ref":"#/definitions/FeatureFlag"}}],"responses":{"201":{"description":"Returns the created feature flag","schema":{"$ref":"#/definitions/FeatureFlag"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Duplicate feature flag key"}}}},"/runtimeGroups/{runtimeGroupId}":{"get":{"tags":["RuntimeGroups"],"summary":"Gets a Runtime Group by ID","operationId":"getRuntimeGroup","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/RuntimeGroup"}},"404":{"description":"Runtime Group not found"}}},"put":{"tags":["RuntimeGroups"],"summary":"Overwrites a RuntimeGroup","operationId":"overwriteRuntimeGroup","parameters":[{"in":"body","name":"runtimeGroup","description":"Full representation of the RuntimeGroup object to overwrite existing one.","required":true,"schema":{"$ref":"#/definitions/RuntimeGroup"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/RuntimeGroup"}},"404":{"description":"Runtime Group not found"},"409":{"description":"Duplicate runtime group name"}}},"delete":{"tags":["RuntimeGroups"],"summary":"Deletes a Runtime Group.","operationId":"deleteRuntimeGroup","parameters":[],"responses":{"204":{"description":"Runtime Group was deleted successfully."},"404":{"description":"Runtime Group not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/apis/{proxyId}/revisions/{revision}":{"get":{"tags":["API Proxy Revision"],"summary":"Gets a specific revision of an API proxy.","operationId":"getProxyRevision","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Revision"],"summary":"Overwrite a revision","operationId":"overwriteProxyRevision","parameters":[{"in":"body","name":"proxy","description":"The changes to apply.","required":true,"schema":{"$ref":"#/definitions/APIProxyRevision"}}],"responses":{"201":{"description":"Returns the updated proxy","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["API Proxy Revision"],"summary":"Deletes the API Proxy revision and all associated policies and resources.","operationId":"deleteProxyRevision","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/applications/{applicationId}/apiKeys":{"get":{"tags":["Applications"],"summary":"Retrieve API keys","description":"Retrieve all the API keys for the specified application.  \nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getApiKeysForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The list of API keys for application","schema":{"title":"APIKeys","type":"array","items":{"$ref":"#/definitions/APIKey"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an API key","description":"Create an API key for the application. An API key may be imported or generated by the server if not\nspecified. The API key can have a start and/or end validity date specified.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createApiKeyForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"apiKey","description":"APIKey representation","required":true,"schema":{"$ref":"#/definitions/APIKey"}}],"responses":{"200":{"description":"The created API key","schema":{"$ref":"#/definitions/APIKey"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/apis/bulkDelete":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy delete. The API will make a best effort to delete the specified proxies.","operationId":"bulkDeleteProxy","parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"One or more proxies could not be deleted. A list detailing the errors will be returned."},"204":{"description":"All specified proxy have been deleted"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/userInfo":{"get":{"tags":["User Info"],"summary":"Get the current user''s information","description":"Get the user details for the currently authenticated user. The user''s evaluated permissions\nand user preferences are returned as part of the _embedded data in the evaluatedPermissions\nand preferences fields. \n","operationId":"getUserInfo","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"}],"responses":{"200":{"description":"The current user details. The current user''s team and role data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/User"}},"401":{"description":"Unauthorized, user failed to authenticate"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/listeners/{listenerId}":{"put":{"tags":["Listeners"],"description":"Edit a listener","operationId":"updateListener","parameters":[{"in":"body","name":"body","description":"Listener representation","required":true,"schema":{"$ref":"#/definitions/Listener"}}],"responses":{"200":{"description":"Listener","schema":{"$ref":"#/definitions/Listener"}},"404":{"description":"Listener not found"}}},"delete":{"tags":["Listeners"],"summary":"Deletes a Listener.","operationId":"deleteListener","parameters":[],"responses":{"204":{"description":"Listener was deleted successfully."},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ListenerIdParam"}]},"/users":{"get":{"tags":["Users"],"summary":"List all users","description":"List all users registered in API Central\n","operationId":"getUsers","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of users. Each user''s team and role data is contained within the _embedded metadata.\n","schema":{"title":"Users","type":"array","items":{"$ref":"#/definitions/User"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Users"],"summary":"Create a user","description":"A user should belong to at least one team, or have one or more admin roles. \n","operationId":"createUser","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"user","description":"User representation","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"201":{"description":"The created user. The user''s team and role data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/revisions/{revision}/policies/rate-limit":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the Rate Limit policy body for a specific revision of the API proxy.","operationId":"getRequestRateLimitPolicy","parameters":[],"responses":{"200":{"description":"The policy details for Rate Limit policy on client requests","schema":{"$ref":"#/definitions/RateLimitingPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a Rate Limiting policy for a specific API proxy revision.","operationId":"overwriteRateLimitingPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/RateLimitingPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/RateLimitingPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/deployments":{"get":{"tags":["Api Deployment"],"summary":"Retrieves the list of api deployments.","operationId":"getDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of api deployments","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}}}},"post":{"tags":["Api Deployment"],"summary":"Deploys an api.","operationId":"deployApi","parameters":[{"in":"body","name":"deployment","description":"The api deployment resource","required":true,"schema":{"$ref":"#/definitions/APIDeployment"}}],"responses":{"201":{"description":"Returns the created deployment","schema":{"$ref":"#/definitions/APIDeployment"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found"},"409":{"description":"Duplicate deployment"},"422":{"description":"Unprocessable entity"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroupsRelationships/{teamId}":{"get":{"tags":["RuntimeGroup Relationships"],"summary":"Returns a list of RuntimeGroup owened by the accessor.","operationId":"getAllRuntimeGroupByTeam","parameters":[],"responses":{"200":{"description":"RuntimeGroup","schema":{"type":"array","items":{"$ref":"#/definitions/RuntimeGroup"}}},"400":{"description":"Wrong accessor identity."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}]},"/swaggers/{url}":{"get":{"tags":["Swagger Validation"],"summary":"Returns the content and warnings(if any) in the swagger passed as url","operationId":"downloadFromUrl","parameters":[{"name":"url","in":"path","description":"The URL of the swagger specification","required":true,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"}],"responses":{"200":{"description":"Ok","schema":{"$ref":"#/definitions/ValidatedSwagger"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/featureFlagsStatus":{"get":{"tags":["Feature flags admin runtime operations"],"summary":"Retrieves the list of active feature flags keys","operationId":"getFeatureFlagsStatus","parameters":[],"responses":{"200":{"description":"List of allowed feature flags for the specified instance id","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceIdSearchQuery"}]},"/environments/{environmentId}":{"get":{"tags":["Environments"],"summary":"Gets an Environment by ID","operationId":"getEnvironment","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/EnvironmentIdParam"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Environment"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["Environments"],"summary":"Deletes an Environment.","operationId":"deleteEnvironment","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/EnvironmentIdParam"}],"responses":{"204":{"description":"Environment was deleted successfully."},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}}},"/runtimeGroups/{runtimeGroupId}/relationships":{"get":{"tags":["RuntimeGroup Relationships"],"summary":"Gets the RuntimeGroup Relationships","operationId":"getRuntimeGroupRelationships","parameters":[],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"type":"string"}}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/userInfo/preferences/{preferenceName}":{"put":{"tags":["User Preferences"],"summary":"Create or overwrite a user preference","description":"Create or overwrite a user preference name-value pair\n","operationId":"overwriteUserPreference","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/PreferenceNameParam"},{"in":"body","name":"userPreference","description":"User preference value","required":true,"schema":{"$ref":"#/definitions/UserPreference"}}],"responses":{"200":{"description":"The user preference","schema":{"$ref":"#/definitions/UserPreference"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["User Preferences"],"summary":"Delete a user preference","description":"Delete a user preference name-value pair\n","operationId":"deleteUserPreference","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/PreferenceNameParam"}],"responses":{"204":{"description":"The user preference was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/users/{userId}/teams":{"get":{"tags":["Users"],"summary":"Get a user''s teams","description":"Get the list of teams that a user is a member of\n","operationId":"getUserTeams","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The list of teams the user is a member of","schema":{"title":"Teams","type":"array","items":{"$ref":"#/definitions/Team"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}}},"/serviceAccounts":{"get":{"tags":["Service Accounts"],"summary":"Retrieve service accounts","description":"Retrieve all service accounts.\n","operationId":"getServiceAccounts","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of service accounts","schema":{"title":"ServiceAccounts","type":"array","items":{"$ref":"#/definitions/ServiceAccount"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Service Accounts"],"summary":"Create a service account","description":"Create a service account.\n","operationId":"createServiceAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"in":"body","name":"serviceAccountRequest","description":"The service account request","required":true,"schema":{"$ref":"#/definitions/ServiceAccountRequest"}}],"responses":{"201":{"description":"The created service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"}]},"/applications/{applicationId}/apiaccess":{"get":{"tags":["Applications"],"summary":"Retrieve API accesses","description":"Retrieve the API accesses for the specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getAPIAccess","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The list of API accesses for the application","schema":{"title":"APIAccesses","type":"array","items":{"$ref":"#/definitions/APIAccess"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an API access","description":"Create an API access for the application. An API access gives the application access\nto an API proxy.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createAPIAccessForApplication","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"apiAccess","description":"APIAccess representation","required":true,"schema":{"$ref":"#/definitions/APIAccess"}}],"responses":{"200":{"description":"The created API access","schema":{"$ref":"#/definitions/APIAccess"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/applications":{"get":{"tags":["Teams"],"summary":"Get a team''s applications","description":"Get all applications belonging to a team. A team can have multiple applications. \nAn application belongs to only one team.   \n","operationId":"getTeamApplications","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"A list of applications associated with the team. The application''s team data is contained within the _embedded metadata.","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}":{"get":{"tags":["Teams"],"summary":"Get a team","description":"Get the details of a single team\n","operationId":"getTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"The retrieved team details","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Teams"],"summary":"Overwrite a team basic details","description":"Overwrite a team basic details.\n","operationId":"overwriteTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"},{"in":"body","name":"team","description":"Team basic details","required":true,"schema":{"$ref":"#/definitions/Team"}}],"responses":{"200":{"description":"The details of the team that was overwritten","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Teams"],"summary":"Delete a team","description":"Delete the specified team\n","operationId":"deleteTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"204":{"description":"The team was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/userFeatureFlags":{"get":{"tags":["Feature flags user operations"],"summary":"Retrieves the list of allowed feature flags","operationId":"getUserFeatureFlagsStatus","parameters":[],"responses":{"200":{"description":"List of allowed feature flags","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"}}}},"/apis/{proxyId}/revisions/{revision}/resources/{resourceId}":{"get":{"tags":["API Proxy Resources"],"summary":"Return the specific resource metadata","operationId":"getResourceMetadata","produces":["application/json","application/xml"],"parameters":[],"responses":{"200":{"description":"Returns the resource","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Resources"],"summary":"Overwrite a resource in an API proxy","operationId":"overwriteResource","consumes":["multipart/form-data"],"parameters":[{"name":"name","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"type","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"file","in":"formData","description":"The uploaded file data","required":true,"type":"file"}],"responses":{"200":{"description":"Returns the resource","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["API Proxy Resources"],"summary":"Deletes the specific resource.","operationId":"deleteResource","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"},{"name":"resourceId","in":"path","description":"The resource id","required":true,"type":"string","maxLength":32,"minLength":32}]},"/apis/{id}/deployments":{"get":{"tags":["API Proxy"],"summary":"Retrieves all deployments for a given api/proxy","operationId":"getProxyRevisionDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"}]},"/apis/{proxyId}/revisions/clone":{"post":{"tags":["API Proxy Revision"],"summary":"Creates a new revision cloning a specific one.","operationId":"cloneProxyRevision","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"revision","in":"formData","description":"The revision to clone.","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"Returns the new proxy revision","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/serviceAccounts/{serviceAccountClientId}/certificate":{"put":{"tags":["Service Accounts"],"summary":"Upload/update a public key for the service account in .pem format","description":"Upload/update a public key for the service account in .pem format.\n","operationId":"uploadPublicKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/ServiceAccountClientIdParam"},{"in":"body","name":"certificate","description":"Certificate representation","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The updated service account containing a renewed registration access token","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}}},"securityDefinitions":{"Bearer":{"type":"apiKey","name":"Authorization","in":"header"}},"definitions":{"AuditMetadata":{"type":"object","properties":{"createTimestamp":{"type":"string","format":"date-time","description":"The creation time"},"createUserId":{"type":"string","description":"Id of the user that created the entity","minLength":32,"maxLength":36},"modifyTimestamp":{"type":"string","format":"date-time","description":"The last modification time"},"modifyUserId":{"type":"string","description":"Id of the user that last modified the entity","minLength":32,"maxLength":36}}},"FeatureFlagStatus":{"type":"object","properties":{"allowed":{"type":"boolean","description":"Defines if the feature flag for the provided key is allowed"}}},"PlatformTeam":{"type":"object","required":["guid","name"],"properties":{"guid":{"type":"string","description":"The id of the platform team","minLength":32,"maxLength":36},"name":{"type":"string","description":"The name of the platform team","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"default":{"type":"boolean","description":"Flag to indicate if this team is default or not","default":false}}},"ServiceAccountRequest":{"type":"object","required":["serviceAccountType"],"properties":{"environmentId":{"type":"string","description":"The environment identifier, required for AASA, CASA and MASA service accounts","minLength":32,"maxLength":32},"serviceAccountType":{"type":"string","format":"text","description":"The service account type","enum":["AASA","CASA","MASA","DOSA"]},"serviceAccountName":{"type":"string","description":"The service account name, required for DOSA service accounts","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"generateKeypair":{"type":"boolean","description":"Generate a new keypair, associate public key with service account and return private key","default":false},"pemEncodedPublicKey":{"type":"string","description":"Service Account PEM Encoded Public Key","maxLength":524288}},"description":"A Service Account Request\n"},"FeatureFlag":{"type":"object","required":["key","name"],"properties":{"id":{"type":"string","description":"Unique identifier","minLength":32,"maxLength":32},"key":{"type":"string","description":"Key","pattern":"^[A-Za-z0-9_\\-\\.]{3,128}$"},"name":{"type":"string","description":"Name","minLength":1,"maxLength":100},"description":{"type":"string","description":"Description","maxLength":350},"deployed":{"type":"boolean","description":"If the service that owns the feature flag is deployed","default":false},"enabled":{"type":"boolean","description":"Valid for all tenants unless overwritten at tenant level","default":false},"forceDisabled":{"type":"boolean","description":"Forces the feature flag to be disabled, any overwrides at tenant level are ignored","default":false},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"ProxyExternalReference":{"type":"object","required":["externalId","externalType"],"properties":{"id":{"type":"string","description":"Proxy external reference unique identifier"},"externalType":{"type":"string","description":"The type of the external reference."},"externalId":{"type":"string","description":"The id of the external reference."},"proxyId":{"type":"string","description":"API Proxy unique identifier"},"state":{"type":"string","enum":["AVAILABLE","UNAVAILABLE"],"default":"AVAILABLE"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"CreateProxyRevisionIgnoreFlags":{"type":"string","enum":["ResponsePolicies","RateLimitingPolicy"]},"ExportedTeam":{"type":"object","properties":{"guid":{"type":"string","description":"The team guid"},"name":{"type":"string","description":"The team name"},"desc":{"type":"string","description":"The team description"},"default":{"type":"boolean","description":"Indicates if is default team"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"APIAccess":{"type":"object","required":["applicationId","proxyId","runtimeGroupId"],"properties":{"id":{"type":"string","description":"The id for the API access","minLength":32,"maxLength":32},"proxyId":{"type":"string","description":"The API proxy id","minLength":32,"maxLength":32},"metadata":{"$ref":"#/definitions/AuditMetadata"},"applicationId":{"type":"string","description":"The id of the application to which this API access belongs","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The id of the runtime group to which this API access belongs","minLength":32,"maxLength":32}}},"GenericPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["configuration"],"properties":{"configuration":{"type":"string","description":"The configuration details, this may be JSON content escaped and held as a string"},"secret":{"type":"boolean","description":"Flag to indicate if the configuration field is encrypted, this field will be decrypted","default":true}}}],"description":"A generic policy, configuration details are held in a string field"},"OAuthClientProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["issuer","oauthClientId"],"properties":{"oauthClientId":{"type":"string","description":"The client id - that is generated by the external authorization server","minLength":1,"maxLength":50},"issuer":{"type":"string","description":"The issuer that produced the Token in url format","maxLength":256,"pattern":"^(https):[\\w-_\\:\\.\\?\\/]*$"},"metaDataPath":{"type":"string","description":"The path of the metadata relative to the issuer url, standard URI is /.well-known/oauth-authorization-server","maxLength":256,"pattern":"^[\\w-_\\#\\:\\.\\?\\/]*$","default":"/.well-known/oauth-authorization-server"},"startTimestamp":{"type":"string","description":"The start time of the validity period, if not specified the JWT key will be valid from creation time. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"},"endTimestamp":{"type":"string","description":"The end time of the validity period, if not specified the JWT key will not expire. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"}}}]},"Permission":{"type":"object","required":["name","permission"],"properties":{"id":{"type":"string","description":"The id for the permission","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the permission","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"permission":{"type":"string","description":"The permission string e.g. team:create","minLength":1,"maxLength":100,"pattern":"^[a-z0-9\\*\\:\\.-]*$"},"description":{"type":"string","description":"The description of the permission","maxLength":350,"pattern":"^[ -~\\s]*$"},"category":{"type":"string","description":"The category of the permission, e.g. team","maxLength":100,"pattern":"^[ -~\\s]*$"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"UserPreference":{"type":"object","properties":{"value":{"type":"string","description":"The user preference field value","maxLength":350,"pattern":"^[ -~\\s]*$"}}},"Sync":{"allOf":[{"$ref":"#/definitions/Listener"},{"properties":{"instanceName":{"type":"string","description":"Listener instance name","default":"axway"},"tenantId":{"type":"string","description":"Name of the tenant (or Org in SaaS model) that the listener belongs to","title":"Sync_with_Tenant_ID"}}}]},"ProxyEndpoint":{"required":["resourcePath"],"properties":{"specificationId":{"type":"string","description":"A reference to the API Proxy Swagger''s resource id."},"resourcePath":{"type":"string","description":"The resourcePath is a URI fragment (for example /weather)\nappended to the base URL of an API proxy (for example, http://test.gg.com).\nresourcePath must be unique within an environment. Uniqueness is\nvalidated when an API proxy is generated or imported.\n","maxLength":128}}},"ExportedUser":{"type":"object","properties":{"guid":{"type":"string","description":"The Platform user guid"},"roles":{"type":"array","description":"List of admin-level roles","items":{"type":"string"}},"team_roles":{"type":"array","description":"List of team-level roles for each team the user is a member of","items":{"$ref":"#/definitions/ExportedTeamRoles"}},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"FeatureFlagPatch":{"type":"object","properties":{"name":{"type":"string","description":"Name","maxLength":100},"description":{"type":"string","description":"Description","maxLength":350},"enabled":{"type":"boolean","description":"Global feature flag override for enabled field"},"deployed":{"type":"boolean","description":"Global feature flag override for deployed field"},"forceDisabled":{"type":"boolean","description":"Global feature flag override for forceDisabled field"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"Resource":{"type":"object","properties":{"id":{"type":"string","description":"Resource unique identifier","minLength":32,"maxLength":32},"name":{"type":"string","description":"the name of the resource","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"type":{"type":"string","description":"the type of the resource","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"}}},"FTPProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["host","port"],"properties":{"host":{"type":"string","description":"Host","pattern":"^([a-zA-Z]\\w+(\\.?[\\w-]+)+\\.?)|((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$"},"port":{"type":"integer","description":"The port number","minimum":1,"maximum":65535},"clientAuthenticationRequired":{"type":"string","description":"Client side Authentication has to be set if SSL enabled.","enum":["YES","NO","OPTIONAL"]},"ssl":{"type":"string","enum":["ENABLED","DISABLED"],"default":"DISABLED"},"connectionMode":{"type":"string","enum":["ACTIVE","PASSIVE","BOTH"],"default":"PASSIVE"},"rangePortFrom":{"type":"integer","description":"The rangePort Min number only if connection mode is Passive or Both.","minimum":1024,"maximum":65535},"rangePortTo":{"type":"integer","description":"The rangePort Max number only if connection mode is Passive or Both.","minimum":1024,"maximum":65535}}}],"description":"Profile for FTP server connection."},"ExportedOrg":{"type":"object","properties":{"org_id":{"type":"string","description":"The Platform org id"},"teams":{"type":"array","description":"List of teams","items":{"$ref":"#/definitions/ExportedTeam"}},"users":{"type":"array","description":"List of users","items":{"$ref":"#/definitions/ExportedUser"}}}},"APIProxyRevision":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"API Proxy unique identifier"},"revision":{"type":"integer","description":"The proxy revision number."},"name":{"type":"string","description":"The name of the API proxy, which must be unique.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"proxyEndpoint":{"$ref":"#/definitions/ProxyEndpoint"},"targetEndpoint":{"$ref":"#/definitions/TargetEndpoint"},"governance":{"$ref":"#/definitions/Governance"},"policies":{"type":"array","description":"Policies associated with the API Proxy revision.","items":{"type":"string"}},"resources":{"type":"array","description":"Resources associated with the API Proxy revision.","items":{"$ref":"#/definitions/Resource"}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"RateLimitingPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["perProxy","perProxyAndApplication"],"properties":{"perProxy":{"$ref":"#/definitions/RateLimitingPolicyLevelDefinition"},"perProxyAndApplication":{"$ref":"#/definitions/RateLimitingPolicyLevelDefinition"}}}],"description":"Rate Limiting Policy details"},"Role":{"type":"object","required":["name","type"],"properties":{"id":{"type":"string","description":"The id for the role","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the role","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"type":{"type":"string","description":"The type of the role. An ADMIN role is a global cross-team role. A TEAM role is specific to a role within a team.","enum":["ADMIN","TEAM"]},"description":{"type":"string","description":"The description of the role","maxLength":350,"pattern":"^[ -~\\s]*$"},"permissions":{"type":"array","description":"List of permission ids that are associated with this role","items":{"type":"string"}},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}}},"APIDeploymentState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["DEPLOYED_ACTIVE","DEPLOYED_INACTIVE","UNDEPLOYED"],"default":"DEPLOYED_ACTIVE"}}},"APIDeployment":{"type":"object","required":["proxyId","proxyRevision","runtimeGroupId"],"properties":{"id":{"type":"string","description":"Api deployment unique identifier.","minLength":32,"maxLength":32},"environmentId":{"type":"string","description":"The environment unique identifier.","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The runtime group unique identifier.","minLength":32,"maxLength":32},"proxyId":{"type":"string","description":"Proxy unique identifier.","minLength":32,"maxLength":32},"proxyRevision":{"type":"integer","description":"Proxy revision identifier."},"resourcePath":{"type":"string","description":"Resource path."},"deploymentUrls":{"type":"array","description":"List of deployment urls. A deployment url is a concatination of a runtime group endpoint and the proxy resource path.","items":{"type":"string"}},"state":{"$ref":"#/definitions/APIDeploymentState"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"Environment":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"Environment unique identifier.","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the Environment which must be unique.","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"metadata":{"$ref":"#/definitions/AuditMetadata"}},"description":"API Central environment"},"RuntimeGroupState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","SUSPENDED"],"default":"ACTIVE"}}},"AuthenticationProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login"],"properties":{"password":{"type":"string","format":"password","description":"The Password","minLength":1,"maxLength":256},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"RateLimitingPolicyLevelDefinition":{"type":"object","required":["enabled"],"properties":{"limit":{"type":"number","description":"Per second limit","minimum":1,"maximum":99999},"enabled":{"type":"boolean","description":"Enable this Rate Limiting Level"}},"description":"Rate Limiting policy level definition"},"Application":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"The id of the application","minLength":32,"maxLength":32},"teamId":{"type":"string","description":"The id of the team to which this application belongs. This will be null if the application is orphaned after a team is deleted. It should be set when an application is created.","minLength":32,"maxLength":36},"name":{"type":"string","description":"The name of the application","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"teamName":{"type":"string","description":"The name of the team to which this application belongs","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the application","maxLength":350,"pattern":"^[ -~\\s]*$"},"enabled":{"type":"boolean","description":"Flag to indicate if this application is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"API Central application"},"MethodOverride":{"type":"object","required":["operationId"],"properties":{"operationId":{"type":"string","description":"API Method operation Id","maxLength":100},"requestPolicies":{"type":"array","description":"The pipeline of policies associated with the request (Inbound).","items":{"type":"string"}},"responsePolicies":{"type":"array","description":"The pipeline of policies associated with the response (Outbound).","items":{"type":"string"}},"authenticationProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"inboundSecurityProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"corsProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"}}},"Certificate":{"properties":{"version":{"type":"integer","description":"The version of the certificate"},"validFrom":{"type":"string","format":"date-time","description":"Certificate is valid from this date"},"validTo":{"type":"string","format":"date-time","description":"Certificate is valid to this date"},"signatureAlgorithm":{"type":"string","description":"Signature algorithm of the certificate"},"commonName":{"type":"string","description":"Common Name (CN) of the certificate"},"subject":{"type":"string","description":"Subject of the certificate"},"sha256Hash":{"type":"string","description":"SHA-256 hash of the DER encoded certificate"}}},"ServiceAccount":{"type":"object","required":["clientId","registrationToken","tokenUrl"],"properties":{"name":{"type":"string","description":"The service account name","maxLength":100},"type":{"type":"string","format":"text","description":"The service account type","enum":["AASA","CASA","MASA","DOSA"]},"clientId":{"type":"string","description":"The service account client id","minLength":37,"maxLength":37},"registrationToken":{"type":"string","description":"The service account registration token"},"tokenUrl":{"type":"string","description":"The authorization server token uri","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"aud":{"type":"string","description":"The audience that the Authentication Token is intended for in url format","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"realm":{"type":"string","description":"The authorization Realm","maxLength":20},"certificate":{"$ref":"#/definitions/ServiceAccountCertificate"},"metadata":{"$ref":"#/definitions/AuditMetadata"}},"description":"A Service Account\n"},"Listener":{"type":"object","required":["name","port","protocol","virtualHosts"],"properties":{"id":{"type":"string","description":"Listener id (format is uuid)"},"activated":{"type":"boolean","description":"Listener state","default":true},"name":{"type":"string","description":"Listener name","minLength":1,"maxLength":80},"protocol":{"type":"string","description":"The transfer protocol used","enum":["http","https"]},"bindAddress":{"type":"string","description":"bind Address","default":"0.0.0.0"},"port":{"type":"string","description":"listener port number","minLength":1,"maxLength":5,"default":"80"},"virtualHosts":{"type":"array","description":"list of virtual hosts","items":{"type":"string","minLength":1},"minItems":1},"runtimeGroupId":{"type":"string","description":"Runtime Group id (format is uuid)"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"User":{"type":"object","required":["preferredName"],"properties":{"id":{"type":"string","description":"The id for the user","minLength":32,"maxLength":32},"instanceId":{"type":"string","description":"The instance id for the user"},"tenantId":{"type":"string","description":"The tenant id for the user"},"environmentId":{"type":"string","description":"The environment id for the user"},"preferredName":{"type":"string","description":"The preferred user name, it should uniquely identify the user","minLength":1,"maxLength":100},"email":{"type":"string","description":"The contact email address associated with the user","maxLength":100,"pattern":"^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"},"enabled":{"type":"boolean","description":"Flag to indicate if this user is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"teamRoles":{"type":"array","description":"The teams the user is a member of, and their role within each team","items":{"$ref":"#/definitions/UserTeamRole"}},"adminRoles":{"type":"array","description":"List of user admin roles","items":{"type":"string","description":"roleId","minLength":32,"maxLength":32}},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"An API Central user\n"},"ValidatedSwagger":{"type":"object","properties":{"warnings":{"type":"array","description":"Warnings generated after validating swagger","items":{"type":"string"}},"swagger":{"type":"string","description":"Content of the validated swagger"}}},"CertChain":{"properties":{"id":{"type":"string","description":"Unique identifier of the Cert Chain","minLength":32,"maxLength":32},"pemEncoded":{"type":"string","description":"Pem encoded cert chain","maxLength":524288},"url":{"type":"string","description":"PEM encoded cert chain is pulled from this URL","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"certificates":{"type":"array","description":"The list of certificate in the chain","readOnly":true,"items":{"$ref":"#/definitions/Certificate"}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"PublishedApiProxy":{"type":"object","required":["description","runtimes","title"],"properties":{"id":{"type":"string","description":"Published API Proxy unique identifier"},"title":{"type":"string","description":"The title of the published API proxy.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the published Api Proxy."},"proxyId":{"type":"string","description":"API Proxy unique identifier"},"runtimes":{"type":"array","description":"The list of runtimes for this proxy.","items":{"type":"string","minLength":32,"maxLength":32}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"PolicyReference":{"type":"object","required":["id","policy","type"],"discriminator":"type","properties":{"id":{"type":"string","description":"Policy reference unique identifier","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"policy":{"type":"string","description":"URN to the policy","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"type":{"type":"string","description":"The type of the policy","enum":["GenericPolicy","HttpBasicAuthPolicy","RateLimitingPolicy"],"default":"GenericPolicy"}},"description":"Policy data for client authentication, and backend authentication"},"SFTPProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"description":"Profile with host and port as required fields to be able to connect to SFTP server based on host and port"},{"type":"object","required":["host","port"],"properties":{"host":{"type":"string","description":"Host of SFTP server","pattern":"^([a-zA-Z]\\w+(\\.?[\\w-]+)+\\.?)|((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$"},"port":{"type":"integer","description":"The port number on which to connect to SFTP server","minimum":1,"maximum":65535},"clientAuthentication":{"type":"string","description":"Type of Client Authentication","enum":["PASSWORD","PUBLIC_KEY","PASSWORD_OR_PUBLIC_KEY"],"default":"PUBLIC_KEY"}}}]},"Profile":{"type":"object","required":["name","type"],"discriminator":"type","properties":{"id":{"type":"string","description":"The id of the profile","minLength":32,"maxLength":32},"applicationId":{"type":"string","description":"The id of the application to which this profile belongs to","minLength":32,"maxLength":32},"enabled":{"type":"boolean","description":"Flag to indicate if this profile is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"name":{"type":"string","description":"The profile name","minLength":1,"maxLength":100},"description":{"type":"string","description":"The description of the profile","maxLength":350,"pattern":"^[ -~\\s]*$"},"type":{"type":"string","description":"Type of the profile","enum":["SSHPublicKeyProfile","PublicCertificateProfile","AuthenticationProfile","SFTPProfile","FTPProfile","JWTKeyProfile","OAuthClientProfile"]}}},"TargetEndpoint":{"properties":{"name":{"type":"string","description":"The name of this endpoint","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The endpoint description","maxLength":350,"pattern":"^[ -~\\s]*$"},"spec":{"type":"string","description":"A reference to the backed API specifications, if available.","maxLength":512,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"specificationId":{"type":"string","description":"A reference to the backend Swagger''s resource id."},"url":{"type":"string","description":"Defines the network address of the backend service to which the TargetEndpoint\nforwards request messages\n","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"certChainId":{"type":"string","description":"A reference to the Cert Chain","minLength":32,"maxLength":32},"isInternal":{"type":"boolean","description":"Flag to indicate if this target endpoint lives in a managed hybrid environment or not","default":false}}},"Authorization":{"type":"object","required":["credential","credentialType","proxyId","runtimeGroupId"],"properties":{"proxyId":{"type":"string","description":"The API proxy id","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The runtime group id","minLength":32,"maxLength":32},"credential":{"type":"string","description":"The credential object to be validated","maxLength":1250},"credentialType":{"type":"string","description":"The credential type","maxLength":32}},"description":"Authorization"},"JWTKeyProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["pemEncodedPublicKey"],"properties":{"pemEncodedPublicKey":{"type":"string","description":"The PEM-formatted RSA public key","maxLength":524288,"pattern":"^(-----BEGIN PUBLIC KEY-----([A-Za-z0-9+\\/=\\s]+)-----END PUBLIC KEY-----)*$"},"jwk":{"type":"string","description":"The JWK formatted RSA public key","maxLength":2048},"keyId":{"type":"string","description":"The key id - that is genereated by the server based on the pem encoded public key","minLength":1,"maxLength":50},"startTimestamp":{"type":"string","description":"The start time of the validity period, if not specified the JWT key will be valid from creation time. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"},"endTimestamp":{"type":"string","description":"The end time of the validity period, if not specified the JWT key will not expire. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"}}}]},"APIProxy":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"API Proxy unique identifier"},"name":{"type":"string","description":"The name of the API proxy, which must be unique.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"state":{"$ref":"#/definitions/ProxyState"},"description":{"type":"string","description":"The description of the Api Proxy."},"metadata":{"$ref":"#/definitions/AuditMetadata"},"revision":{"type":"array","description":"The list of revisions for this proxy.","readOnly":true,"items":{"type":"integer","format":"int32"}},"revisions":{"type":"array","description":"The list of revisions for this proxy.","readOnly":true,"items":{"$ref":"#/definitions/APIProxyRevision"}},"externalReferences":{"type":"array","description":"The list of external references for this proxy.","readOnly":true,"items":{"$ref":"#/definitions/ProxyExternalReference"}},"tags":{"type":"array","description":"List of tags","items":{"type":"string","description":"must start with one of [A-Za-z0-9_] followed by whitespace, dash or underscore.","pattern":"^[\\w\\s-_()\\[\\]]*$"},"maxItems":30},"owningTeamId":{"type":"string","description":"The id of the owning team for this proxy.","minLength":32,"maxLength":36,"pattern":"^[\\w\\s-_()\\[\\]]*$"}}},"Team":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"The id for the team","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the team","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the team","maxLength":350,"pattern":"^[ -~\\s]*$"},"email":{"type":"string","description":"The contact email address associated with the team","maxLength":100,"pattern":"^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"},"phone":{"type":"string","description":"Contact phone number of the team","maxLength":100,"pattern":"^[0-9 .\\-()\\+]+$"},"enabled":{"type":"boolean","description":"Flag to indicate if this team is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"API Central team"},"ServiceAccountCertificate":{"type":"object","properties":{"publicKey":{"type":"string","description":"Pem encoded public key","maxLength":524288},"privateKey":{"type":"string","description":"Private key, valid only at service account creation when generateKeyPair is true, empty in all other cases"},"kid":{"type":"string","description":"Public key identifier, generated when uploading a new public key"}}},"PublicCertificateProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login","publicCertificate"],"properties":{"publicCertificate":{"type":"string","description":"The public certificate in PKCS7, CRT, DER - PEM or Base64 encoded format","maxLength":524288,"pattern":"^(-----BEGIN CERTIFICATE-----([A-Za-z0-9+\\/=\\s]+)-----END CERTIFICATE-----)|^(-----BEGIN PKCS7-----([A-Za-z0-9+\\/=\\s]+)-----END PKCS7-----)$"},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"EvaluatedPermission":{"type":"object","properties":{"id":{"type":"string","description":"The id for the permission","minLength":32,"maxLength":32},"evaluated":{"type":"string","description":"The permission string e.g. team:create","minLength":1,"maxLength":100,"pattern":"^[a-z0-9\\*\\:\\.-]*$"}}},"ProxyState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","DEPRECATED","RETIRED","PUBLISHED"],"default":"ACTIVE"},"retirementDate":{"type":"string","format":"date-time","description":"When to retire the proxy"}}},"HttpBasicAuthPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["password","username"],"properties":{"username":{"type":"string","description":"The username, no control chars or \":\" allowed","minLength":1,"maxLength":256,"pattern":"^[ -9\\s;-~]*$"},"password":{"type":"string","description":"The password, this is required but may be set to \"\", no control chars allowed","maxLength":256,"pattern":"^[ -~\\s]*$"}}}],"description":"HTTP Basic authentication policy details"},"LogicalInstanceState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","SUSPENDED"],"default":"ACTIVE"}}},"LogicalInstance":{"type":"object","required":["name","tenantId"],"properties":{"id":{"type":"string","description":"Logical Instance unique identifier"},"name":{"type":"string","description":"The name of the Logical Instance which must be unique."},"tenantId":{"type":"string","description":"The ID of the tenant owning this logical instance."},"state":{"$ref":"#/definitions/LogicalInstanceState"},"summary":{"type":"string"},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"Governance":{"type":"object","properties":{"requestPolicies":{"type":"array","description":"The pipeline of policies associated with the request (Inbound).","items":{"type":"string"}},"responsePolicies":{"type":"array","description":"The pipeline of policies associated with the response (Outbound).","items":{"type":"string"}},"methodOverrides":{"type":"array","items":{"$ref":"#/definitions/MethodOverride"}}}},"UserTeamRole":{"type":"object","required":["roles","teamId"],"properties":{"teamId":{"type":"string","description":"The id of the team","minLength":32,"maxLength":36},"roles":{"type":"array","description":"List of role ids","items":{"type":"string","description":"The id of the role the user has in the team","minLength":32,"maxLength":32}}}},"RuntimeGroup":{"type":"object","required":["environmentId","name"],"properties":{"id":{"type":"string","description":"Runtime Group unique identifier."},"name":{"type":"string","description":"The name of the Runtime Group which must be unique."},"state":{"$ref":"#/definitions/RuntimeGroupState"},"summary":{"type":"string"},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}},"endpointUrls":{"type":"array","description":"List of endpoint urls in this runtime group.","items":{"type":"string"}},"environmentId":{"type":"string","description":"The environment to which this runtime group belongs","minLength":32,"maxLength":32}}},"APIKey":{"type":"object","required":["applicationId"],"properties":{"id":{"type":"string","description":"The id of the API key","minLength":32,"maxLength":32},"apiKey":{"type":"string","description":"The API key. This value is auto-generated"},"secret":{"type":"string","description":"The API key secret. This value is auto-generated and returned only upon APIKey creation."},"applicationId":{"type":"string","description":"The id of the application to which this API key belongs","minLength":32,"maxLength":32},"startTimestamp":{"type":"string","format":"date-time","description":"The start time of the validity period, if not specified the API key will be valid from creation time"},"endTimestamp":{"type":"string","format":"date-time","description":"The end time of the validity period, if not specified the API key will not expire"},"enabled":{"type":"boolean","description":"Flag to indicate if this API key is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"SSHPublicKeyProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login","publicKey"],"properties":{"publicKey":{"type":"string","description":"The public ssh-key encoded in format specified by RFC-4254 or in PEM encoded format","maxLength":524288,"pattern":"^(-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----)|(ssh-[\\w\\sAAAA][0-9A-Za-z+/]+[=]{0,3} ([^@]+@[^@]+))*$"},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"FeatureFlagOverride":{"type":"object","required":["instanceId"],"properties":{"id":{"type":"string","description":"Unique identifier","minLength":32,"maxLength":32},"instanceId":{"type":"string","description":"Tenant logical instance unique identifier","minLength":1,"maxLength":36},"enabled":{"type":"boolean","description":"Tenant feature flag override","default":false},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"ExportedTeamRoles":{"type":"object","properties":{"guid":{"type":"string","description":"The team guid"},"name":{"type":"string","description":"The team name"},"default":{"type":"boolean","description":"Indicates if is default team"},"roles":{"type":"array","description":"List of roles the user has in the team","items":{"type":"string"}}}}},"parameters":{"InstanceHeader":{"name":"X-Axway-Instance-Id","in":"header","description":"The logical instance id","required":false,"type":"string","maxLength":32,"minLength":32},"TeamHeader":{"name":"X-Axway-Team-Id","in":"header","description":"The currently selected team if the user is using the system within a team context","required":false,"type":"string","maxLength":36,"minLength":32},"OffsetParam":{"name":"offset","in":"query","description":"The offset index into the result set to start returning results from","required":false,"type":"integer","default":0},"CountParam":{"name":"count","in":"query","description":"The maximum number of entities to return","required":false,"type":"integer","default":20},"PageNumberParam":{"name":"page","in":"query","description":"The offset starting page number in the result set to start returning results from, starts at 1","required":false,"type":"integer","default":1},"PageSizeParam":{"name":"pageSize","in":"query","description":"The number of entities allowed in a page","required":false,"type":"integer","default":20},"SortParam":{"name":"sort","in":"query","description":"The field to sort result sets by, in ASC or DESC order","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},"SearchQuery":{"name":"query","in":"query","description":"Query string for filtering entity. Expressed in FIQL/RSQL language.","required":false,"type":"string"},"IdParam":{"name":"id","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"EnvironmentIdParam":{"name":"environmentId","in":"path","description":"The environment id","required":true,"type":"string","maxLength":32,"minLength":32},"InstanceIdSearchQuery":{"name":"query","in":"query","description":"Query string for specifing the \\\"instanceId\\\" expressed in FIQL/RSQL language","required":true,"type":"string"},"TeamIdParam":{"name":"teamId","in":"path","description":"The team id","required":true,"type":"string","maxLength":36,"minLength":32},"RequestUrl":{"name":"requestUrl","in":"path","description":"Path parameter to filter deployments starting with the same resource path as the request url.","required":true,"type":"string"},"ProxyIdParam":{"name":"proxyId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"KeyParam":{"name":"key","in":"path","description":"The key of the feature toggle","required":true,"type":"string","pattern":"^[A-Za-z0-9_\\-\\.]{3,32}$"},"RoleIdParam":{"name":"roleId","in":"path","description":"The role id","required":true,"type":"string","maxLength":32,"minLength":32},"UserIdParam":{"name":"userId","in":"path","description":"The user id","required":true,"type":"string","maxLength":32,"minLength":32},"ServiceAccountClientIdParam":{"name":"serviceAccountClientId","in":"path","description":"The service account''s client id","required":true,"type":"string","maxLength":37,"minLength":37},"ProductIdParam":{"name":"productId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"TimestampParam":{"name":"X-Axway-Configs-Ts","in":"header","required":false,"type":"integer","format":"int64"},"TenantHeader":{"name":"X-Axway-Tenant-Id","in":"header","description":"The tenant id","required":false,"type":"string","maxLength":32,"minLength":1},"ListenerIdParam":{"name":"listenerId","in":"path","description":"A listener id","required":true,"type":"string","maxLength":32,"minLength":32},"ApplicationIdParam":{"name":"applicationId","in":"path","description":"The application id","required":true,"type":"string","maxLength":32,"minLength":32},"RevisionParam":{"name":"revision","in":"path","description":"Revision number of the API.","required":true,"type":"integer","format":"int32"},"FeatureFlagIdParam":{"name":"featureFlagId","in":"path","description":"The feature flag id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"ServiceAccountTypeParam":{"name":"serviceAccountType","in":"path","description":"The service account''s type","required":true,"type":"string","maxLength":4,"minLength":4},"CertChainBodyParam":{"in":"body","name":"certChain","description":"Cert chain representation. It must have either url or pemEncoded property defined.","required":true,"schema":{"$ref":"#/definitions/CertChain"}},"ProfileIdParam":{"name":"profileId","in":"path","description":"The Profile id","required":true,"type":"string","maxLength":32,"minLength":32},"ApiKeyIdParam":{"name":"apiKeyId","in":"path","description":"The API key id","required":true,"type":"string","maxLength":32,"minLength":32},"ApiAccessIdParam":{"name":"apiAccessId","in":"path","description":"The API access id","required":true,"type":"string","maxLength":32,"minLength":32},"PublishedItemIdParam":{"name":"publishedItemId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"PreferenceNameParam":{"name":"preferenceName","in":"path","description":"The user preference name","required":true,"type":"string","maxLength":100,"minLength":1},"FeatureFlagOverrideIdParam":{"name":"featureFlagOverrideId","in":"path","description":"The id of a feature flag override","required":true,"type":"string","maxLength":32,"minLength":32}}}')
INSERT INTO proxy(tenant_name, base_path, swagger) VALUES ('chris', '/api/petstore', '{"swagger":"2.0","info":{"description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.","version":"1.0.3","title":"Swagger Petstore","termsOfService":"http://swagger.io/terms/","contact":{"email":"apiteam@swagger.io"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"}},"host":"petstore.swagger.io","basePath":"/v2","tags":[{"name":"pet","description":"Everything about your Pets","externalDocs":{"description":"Find out more","url":"http://swagger.io"}},{"name":"store","description":"Access to Petstore orders"},{"name":"user","description":"Operations about user","externalDocs":{"description":"Find out more about our store","url":"http://swagger.io"}}],"schemes":["https","http"],"paths":{"/pet/{petId}":{"get":{"tags":["pet"],"summary":"Find pet by ID","description":"Returns a single pet","operationId":"getPetById","produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to return","required":true,"type":"integer","format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Pet"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"api_key":[]}]},"post":{"tags":["pet"],"summary":"Updates a pet in the store with form data","description":"","operationId":"updatePetWithForm","consumes":["application/x-www-form-urlencoded"],"produces":["application/json","application/xml"],"parameters":[{"name":"petId","in":"path","description":"ID of pet that needs to be updated","required":true,"type":"integer","format":"int64"},{"name":"name","in":"formData","description":"Updated name of the pet","required":false,"type":"string"},{"name":"status","in":"formData","description":"Updated status of the pet","required":false,"type":"string"}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"delete":{"tags":["pet"],"summary":"Deletes a pet","description":"","operationId":"deletePet","produces":["application/json","application/xml"],"parameters":[{"name":"api_key","in":"header","required":false,"type":"string"},{"name":"petId","in":"path","description":"Pet id to delete","required":true,"type":"integer","format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/{petId}/uploadImage":{"post":{"tags":["pet"],"summary":"uploads an image","description":"","operationId":"uploadFile","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"petId","in":"path","description":"ID of pet to update","required":true,"type":"integer","format":"int64"},{"name":"additionalMetadata","in":"formData","description":"Additional data to pass to server","required":false,"type":"string"},{"name":"file","in":"formData","description":"file to upload","required":false,"type":"file"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/ApiResponse"}}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet":{"post":{"tags":["pet"],"summary":"Add a new pet to the store","description":"","operationId":"addPet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"405":{"description":"Invalid input"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]},"put":{"tags":["pet"],"summary":"Update an existing pet","description":"","operationId":"updatePet","consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Pet object that needs to be added to the store","required":true,"schema":{"$ref":"#/definitions/Pet"}}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Pet not found"},"405":{"description":"Validation exception"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByStatus":{"get":{"tags":["pet"],"summary":"Finds Pets by status","description":"Multiple status values can be provided with comma separated strings","operationId":"findPetsByStatus","produces":["application/json","application/xml"],"parameters":[{"name":"status","in":"query","description":"Status values that need to be considered for filter","required":true,"type":"array","items":{"type":"string","enum":["available","pending","sold"],"default":"available"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid status value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}]}},"/pet/findByTags":{"get":{"tags":["pet"],"summary":"Finds Pets by tags","description":"Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.","operationId":"findPetsByTags","produces":["application/json","application/xml"],"parameters":[{"name":"tags","in":"query","description":"Tags to filter by","required":true,"type":"array","items":{"type":"string"},"collectionFormat":"multi"}],"responses":{"200":{"description":"successful operation","schema":{"type":"array","items":{"$ref":"#/definitions/Pet"}}},"400":{"description":"Invalid tag value"}},"security":[{"petstore_auth":["write:pets","read:pets"]}],"deprecated":true}},"/store/inventory":{"get":{"tags":["store"],"summary":"Returns pet inventories by status","description":"Returns a map of status codes to quantities","operationId":"getInventory","produces":["application/json"],"parameters":[],"responses":{"200":{"description":"successful operation","schema":{"type":"object","additionalProperties":{"type":"integer","format":"int32"}}}},"security":[{"api_key":[]}]}},"/store/order/{orderId}":{"get":{"tags":["store"],"summary":"Find purchase order by ID","description":"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions","operationId":"getOrderById","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of pet that needs to be fetched","required":true,"type":"integer","maximum":10,"minimum":1,"format":"int64"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}},"delete":{"tags":["store"],"summary":"Delete purchase order by ID","description":"For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors","operationId":"deleteOrder","produces":["application/json","application/xml"],"parameters":[{"name":"orderId","in":"path","description":"ID of the order that needs to be deleted","required":true,"type":"integer","minimum":1,"format":"int64"}],"responses":{"400":{"description":"Invalid ID supplied"},"404":{"description":"Order not found"}}}},"/store/order":{"post":{"tags":["store"],"summary":"Place an order for a pet","description":"","operationId":"placeOrder","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"order placed for purchasing the pet","required":true,"schema":{"$ref":"#/definitions/Order"}}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/Order"}},"400":{"description":"Invalid Order"}}}},"/user/{username}":{"get":{"tags":["user"],"summary":"Get user by user name","description":"","operationId":"getUserByName","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be fetched. Use user1 for testing. ","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}},"put":{"tags":["user"],"summary":"Updated user","description":"This can only be done by the logged in user.","operationId":"updateUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"name that need to be updated","required":true,"type":"string"},{"in":"body","name":"body","description":"Updated user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"400":{"description":"Invalid user supplied"},"404":{"description":"User not found"}}},"delete":{"tags":["user"],"summary":"Delete user","description":"This can only be done by the logged in user.","operationId":"deleteUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"path","description":"The name that needs to be deleted","required":true,"type":"string"}],"responses":{"400":{"description":"Invalid username supplied"},"404":{"description":"User not found"}}}},"/user/login":{"get":{"tags":["user"],"summary":"Logs user into the system","description":"","operationId":"loginUser","produces":["application/json","application/xml"],"parameters":[{"name":"username","in":"query","description":"The user name for login","required":true,"type":"string"},{"name":"password","in":"query","description":"The password for login in clear text","required":true,"type":"string"}],"responses":{"200":{"description":"successful operation","headers":{"X-Expires-After":{"type":"string","format":"date-time","description":"date in UTC when token expires"},"X-Rate-Limit":{"type":"integer","format":"int32","description":"calls per hour allowed by the user"}},"schema":{"type":"string"}},"400":{"description":"Invalid username/password supplied"}}}},"/user/logout":{"get":{"tags":["user"],"summary":"Logs out current logged in user session","description":"","operationId":"logoutUser","produces":["application/json","application/xml"],"parameters":[],"responses":{"default":{"description":"successful operation"}}}},"/user":{"post":{"tags":["user"],"summary":"Create user","description":"This can only be done by the logged in user.","operationId":"createUser","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"Created user object","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithArray":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithArrayInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}},"/user/createWithList":{"post":{"tags":["user"],"summary":"Creates list of users with given input array","description":"","operationId":"createUsersWithListInput","consumes":["application/json"],"produces":["application/json","application/xml"],"parameters":[{"in":"body","name":"body","description":"List of user object","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/User"}}}],"responses":{"default":{"description":"successful operation"}}}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"},"petstore_auth":{"type":"oauth2","authorizationUrl":"https://petstore.swagger.io/oauth/authorize","flow":"implicit","scopes":{"read:pets":"read your pets","write:pets":"modify pets in your account"}}},"definitions":{"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"xml":{"name":"tag"},"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}}},"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}');
INSERT INTO proxy(tenant_name, base_path, swagger) VALUES ('chris', '/api/music', '{"swagger":"2.0","info":{"version":"1.0","title":"API Central","contact":{"email":"support@axway.com"},"license":{"name":"Copyright Axway 2017. All rights reserved."}},"host":"prod-e4ec6c3369cdafa50169ce18e33d00bb.apicentral.axwayamplify.com","basePath":"/api/v1","schemes":["https"],"consumes":["application/json","application/xml"],"produces":["application/json","application/xml"],"paths":{"/applications/{applicationId}":{"get":{"tags":["Applications"],"summary":"Get an application","description":"Get the details of a single application. If the user is working within a team context, the\nrequested application must belong to the user''s currently selected team.\n","operationId":"getApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The retrieved application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Applications"],"summary":"Overwrite an application","description":"Overwrite an application completely. No details of the original application are retained other than the id.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"overwriteApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"application","description":"Application representation","required":true,"schema":{"$ref":"#/definitions/Application"}}],"responses":{"201":{"description":"The overwritten application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete an application","description":"Delete the specified application.  If the user is working within a team \ncontext, the application must belong to the user''s currently selected team.\n","operationId":"deleteApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"204":{"description":"The application was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/apis":{"get":{"tags":["API Proxy to Team Relationships"],"summary":"Get the list of API Proxy entities related to the given team","operationId":"getProxiesByTeam","parameters":[],"responses":{"200":{"description":"Proxies","schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamIdParam"}]},"/applications/{applicationId}/profiles/{profileId}":{"get":{"tags":["Applications"],"summary":"Get a Profile by Id","description":"Get a Profile for a specified application specified by Id.\n","operationId":"getProfileById","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"}],"responses":{"200":{"description":"The Profile specified by type for application","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Applications"],"summary":"Overwrite a Profile","description":"Overwrite a Profile for a specified application.\n","operationId":"overwriteProfile","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"},{"in":"body","name":"profile","description":"Profile representation","required":true,"schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}}],"responses":{"200":{"description":"The list of Profiles specified by type for application","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete a Profile","description":"Delete a Profile for a specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"deleteProfile","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ProfileIdParam"}],"responses":{"204":{"description":"The Profile deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/certChains/{certChainId}":{"get":{"tags":["Certificates"],"summary":"Gets a Cert Chain by ID","operationId":"getCertChain","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/CertChain"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"put":{"tags":["Certificates"],"summary":"Overwrites Cert Chain","operationId":"overwriteCertChain","parameters":[{"$ref":"#/parameters/CertChainBodyParam"}],"responses":{"200":{"description":"Cert Chain overwritten","schema":{"$ref":"#/definitions/CertChain"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"delete":{"tags":["Certificates"],"summary":"Deletes Cert Chain","operationId":"deleteCertificates","parameters":[],"responses":{"204":{"description":"Cert Chain deleted"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Cert Chain not found"}}},"parameters":[{"name":"certChainId","in":"path","description":"The ID of the Cert Chain","required":true,"type":"string","maxLength":32,"minLength":32}]},"/runtimeGroupsRelationships/{teamId}/runtimeGroups/{runtimeGroupId}":{"put":{"tags":["RuntimeGroup Relationships"],"summary":"Set a relationsip item for the specific RuntimeGroup.","operationId":"setRuntimeGroupRelationship","parameters":[],"responses":{"200":{"description":"Ok"}}},"delete":{"tags":["RuntimeGroup Relationships"],"summary":"Remove a relationship item for the specific RuntimeGroup.","operationId":"deleteRuntimeGroupRelationship","parameters":[],"responses":{"204":{"description":"Ok"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/userInfo/token/revoke":{"post":{"tags":["User Info"],"summary":"Revoke own token","description":"A user calls this API at logout time to invalidate their own token. \n","operationId":"revokeToken","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"}],"responses":{"204":{"description":"The user''s token is revoked successfully"},"401":{"description":"Unauthorized, user failed to authenticate"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}":{"get":{"tags":["API Proxy"],"summary":"Gets an API proxy by ID","operationId":"getProxy","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"put":{"tags":["API Proxy"],"summary":"Overwrite an API proxy","operationId":"overwriteProxy","parameters":[{"in":"body","name":"proxy","description":"The changes to apply.","required":true,"schema":{"$ref":"#/definitions/APIProxy"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["API Proxy"],"summary":"Deletes an API proxy and all associated endpoints, policies, resources, and revisions.","operationId":"deleteProxy","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/serviceAccounts/{environmentId}/{serviceAccountType}":{"get":{"tags":["Service Accounts"],"summary":"Retrieve a Service Account","description":"Get the details of a single service account. Not supported for DOSA service accounts.\n","operationId":"getServiceAccountByEnvironmentIdAndType","parameters":[],"responses":{"200":{"description":"The retrieved service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/EnvironmentIdParam"},{"$ref":"#/parameters/ServiceAccountTypeParam"}]},"/apis":{"get":{"tags":["API Proxy"],"summary":"Returns a list of all API proxies.","operationId":"getProxies","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"},{"name":"expand","in":"query","description":"Name of the sub-collections data to expand in the response. \"revisions\" and \"externalReferences\" only is supported. For more than one sub-collections, use comma separated values.","required":false,"type":"string","format":"text"}],"responses":{"200":{"description":"Proxies","schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["API Proxy"],"summary":"Imports an API Proxy","operationId":"importProxy","consumes":["multipart/form-data"],"parameters":[{"name":"proxyName","in":"formData","description":"The API Proxy name","required":true,"type":"string","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},{"name":"type","in":"formData","description":"Spec type","required":true,"type":"string","format":"text","enum":["SWAGGER","OAS3"]},{"name":"specification","in":"formData","description":"Spec","required":true,"type":"file"},{"name":"resourcePath","in":"formData","description":"A path component that uniquely identifies this API proxy. The basePath of the Proxy. It must start with / followed by any  of [A-Za-z0-9] followed by dash, dot or underscore","required":true,"type":"string","maxLength":128,"pattern":"^(\\/[A-Za-z0-9_\\-\\.]+)+"},{"name":"url","in":"formData","description":"The URL from which specification is downloaded from. This will be fall back backend service url if no host is specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"backendUrl","in":"formData","description":"The backend service url to override the host specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"description","in":"formData","description":"The proxy description","required":false,"type":"string"},{"name":"owningTeamId","in":"formData","description":"The id of the owning team for this proxy.","required":false,"type":"string","maxLength":36,"minLength":32,"pattern":"^[\\w\\s-_()\\[\\]]*$"},{"name":"isInternal","in":"formData","description":"Flag to indicate if the target endpoint of this proxy lives in a managed hybrid environment or not","required":false,"type":"boolean","default":false}],"responses":{"201":{"description":"Returns the created API Proxy","schema":{"$ref":"#/definitions/APIProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/bulkProxyExport":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy Export","operationId":"bulkProxyExport","produces":["application/octet-stream"],"parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"A list of errors, if any."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroups/{id}/deployments":{"get":{"tags":["RuntimeGroup"],"summary":"Retrieves all deployments for a given runtime group.","operationId":"getRuntimeGroupDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Runtime group not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"},{"$ref":"#/parameters/SearchQuery"}]},"/authnz":{"post":{"tags":["Runtime API Authorization"],"summary":"Validate that the credential is permitted to access the API proxy","description":"Ensures the team, application and credential are in an enabled\nstate and that the proxy is valid and not in a retired state.\n","operationId":"validateAccess","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"authorization","description":"API credential, credential type and proxy parameter","required":true,"schema":{"$ref":"#/definitions/Authorization"}}],"responses":{"200":{"description":"The application that has been successfully authorized for the API proxy access.\nThe application''s team data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"}},"security":[{"Bearer":[]}]}},"/applications/{applicationId}/apiaccess/{apiAccessId}":{"delete":{"tags":["Applications"],"summary":"Delete an API access","description":"Delete an API access for an specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.       \n","operationId":"deleteAPIAccess","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiAccessIdParam"}],"responses":{"204":{"description":"The API access deleted successfully"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/users":{"get":{"tags":["Teams"],"summary":"Get a team''s users","description":"Get all users that are members of a team. A team can have many users. \nA user may be a member of many teams.   \n","operationId":"getTeamUsers","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"A list of users that are members of the team","schema":{"title":"Users","type":"array","items":{"$ref":"#/definitions/User"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/teams/{teamId}/relationship":{"put":{"tags":["API Proxy to Team Relationships"],"summary":"Creates the relationship between a proxy and a team","operationId":"createProxyTeamRelationship","parameters":[],"responses":{"204":{"description":"OK"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"delete":{"tags":["API Proxy to Team Relationships"],"summary":"Deletes the relationship between a proxy and a team","operationId":"deleteProxyTeamRelationship","parameters":[],"responses":{"204":{"description":"OK"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/TeamIdParam"}]},"/apis/{proxyId}/revisions/{revision}/resources":{"get":{"tags":["API Proxy Resources"],"summary":"Lists the resource file for the API Proxy revision.","operationId":"getResourcesMetadata","parameters":[{"name":"type","in":"query","description":"resource type to filter by","required":false,"type":"string","maxLength":100},{"name":"name","in":"query","description":"resource name to filter by","required":false,"type":"string","maxLength":100}],"responses":{"200":{"description":"Returns the resource","schema":{"type":"array","items":{"$ref":"#/definitions/Resource"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"post":{"tags":["API Proxy Resources"],"summary":"Import an resource either from an external file.","operationId":"importResource","consumes":["multipart/form-data"],"parameters":[{"name":"name","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"type","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"file","in":"formData","description":"The uploaded file data","required":true,"type":"file"}],"responses":{"201":{"description":"Returns the resource definition","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/teams":{"get":{"tags":["Teams"],"summary":"List all teams","description":"List all teams     \n","operationId":"getTeams","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of teams","schema":{"title":"Teams","type":"array","items":{"$ref":"#/definitions/Team"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Teams"],"summary":"Create a team","description":"Create a team. A team may represent different concepts, e.g. a project\nteam that is developing APIs, a business unit, or, an external partner that is consuming APIs. \nUsers, applications, API proxies and runtime groups are associated with teams.\n","operationId":"createTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"team","description":"Team representation","required":true,"schema":{"$ref":"#/definitions/Team"}}],"responses":{"201":{"description":"The created team","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/listeners":{"get":{"tags":["Listeners"],"description":"List listeners","operationId":"listListeners","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"name":"name","in":"query","description":"Filter by listener name","required":false,"type":"string"}],"responses":{"200":{"description":"List of listeners","schema":{"title":"Listeners","type":"array","items":{"$ref":"#/definitions/Listener"}}}}},"post":{"tags":["Listeners"],"description":"Create a new listener","operationId":"createListener","parameters":[{"in":"body","name":"body","description":"Listener representation","required":true,"schema":{"$ref":"#/definitions/Listener"}}],"responses":{"201":{"description":"Listener","schema":{"$ref":"#/definitions/Listener"}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/revisions/{revision}/resources/{resourceId}/raw":{"get":{"tags":["API Proxy Resources"],"summary":"Return the specific resource payload","operationId":"getResourceRaw","produces":["application/octet-stream"],"parameters":[],"responses":{"200":{"description":"Returns the resource payload"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"},{"name":"resourceId","in":"path","description":"The resource id","required":true,"type":"string","maxLength":32,"minLength":32}]},"/applications/{applicationId}/apiKeys/{apiKeyId}":{"put":{"tags":["Applications"],"summary":"Overwrite an API key","description":"Overwrite the validity of an API key.\n","operationId":"overwriteAPIKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiKeyIdParam"},{"in":"body","name":"apiKey","description":"APIKey representation","required":true,"schema":{"$ref":"#/definitions/APIKey"}}],"responses":{"200":{"description":"The details of the API key that was overwritten","schema":{"$ref":"#/definitions/APIKey"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Applications"],"summary":"Delete an API key","description":"Delete an API key for an specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"deleteAPIKey","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/ApiKeyIdParam"}],"responses":{"204":{"description":"The API key deleted successfully"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/featureFlagsStatus/{key}":{"get":{"tags":["Feature flags admin runtime operations"],"summary":"Checks if a feature flag key is allowed","operationId":"getFeatureFlagsStatusForKey","parameters":[],"responses":{"200":{"description":"In case the feature flag with the specified key is allowed for the specified instance id","schema":{"$ref":"#/definitions/FeatureFlagStatus"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/KeyParam"},{"$ref":"#/parameters/InstanceIdSearchQuery"}]},"/apis/{proxyId}/revisions":{"post":{"tags":["API Proxy Revision"],"summary":"Create a new proxy revision","operationId":"createProxyRevision","consumes":["multipart/form-data"],"parameters":[{"name":"specification","in":"formData","description":"The Swagger to import for the new revision","required":false,"type":"file"},{"name":"url","in":"formData","description":"The URL from which specification is downloaded from. This will be fall back backend service url if no host is specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"backendUrl","in":"formData","description":"The backend service url to override the host specified in specification. If backendUrl is specified, it will be used, if not specification''s host will be used, if not then the url will be  used.","required":false,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},{"name":"revision","in":"formData","description":"The revision to clone.","required":true,"type":"integer","format":"int32"},{"name":"policy","in":"formData","description":"The client authorization policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"backendAuthPolicy","in":"formData","description":"The backend authorization policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"rateLimitingPolicy","in":"formData","description":"The rate limiting policy, if applicable, of the new revision","required":false,"type":"string"},{"name":"isInternal","in":"formData","description":"Flag to indicate if the target endpoint of this proxy lives in a managed hybrid environment or not","required":false,"type":"boolean","default":false},{"name":"ignoreFields","in":"formData","description":"A list of fields to ignore when cloning a revision, use ResponsePolicies to remove backend authentication, RateLimitingPolicy to remove rate limiting policy","required":false,"type":"array","items":{"type":"string","enum":["ResponsePolicies","RateLimitingPolicy"]},"collectionFormat":"multi"}],"responses":{"201":{"description":"Returns the new proxy revision","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/apis/{proxyId}/revisions/{revision}/export":{"get":{"tags":["API Proxy Export"],"summary":"Exports a specific revision of an API proxy.","operationId":"exportProxyRevision","produces":["application/octet-stream"],"parameters":[],"responses":{"200":{"description":"OK","schema":{"type":"file"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/runtimeGroups/{id}/deployments/{requestUrl}":{"get":{"tags":["RuntimeGroup"],"summary":"Retrieves the deployment that starts with the same resourcePath as the requestUrl query param.","operationId":"getRuntimeGroupDeploymentByRequestUrl","parameters":[],"responses":{"200":{"description":"We reponsd with the api deployment that is active for runtimeGroupId and the requestUrl.","schema":{"$ref":"#/definitions/APIDeployment"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"You retrieve this error if you don''t any deployment with resourcePath starting with the requestUrl."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"},{"$ref":"#/parameters/RequestUrl"}]},"/deployments/{id}":{"get":{"tags":["Api Deployment"],"summary":"Retrieves a deployment given its identifier","operationId":"getDeployment","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIDeployment"}},"400":{"description":"Bad Request."},"404":{"description":"Not found."}}},"delete":{"tags":["Api Deployment"],"summary":"Undeploys an api.","operationId":"undeployApi","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"}]},"/applications":{"get":{"tags":["Applications"],"summary":"List all applications","description":"List all applications. If the user is working within a team context, the\napplications returned will be those associated with the user''s currently selected team.\n","operationId":"getApplications","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of applications. The application''s team data is contained within the _embedded metadata.\n","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an application","description":"Create an application for a team. If the user is working within a team context, the\napplication must be created within the user''s currently selected team.\n","operationId":"createApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"application","description":"Application representation","required":true,"schema":{"$ref":"#/definitions/Application"}}],"responses":{"201":{"description":"The created application. The application''s team data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Application"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/users/{userId}/applications":{"get":{"tags":["Users"],"summary":"Get a user''s applications","description":"Get the applications related to all the teams that the user is a member of\n","operationId":"getUserApplications","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The list of applications. Each application''s team data is contained within the _embedded metadata.","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/environments":{"get":{"tags":["Environments"],"summary":"Returns a list of all Environments.","operationId":"getAllEnvironments","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of Environments.","schema":{"title":"Environments","type":"array","items":{"$ref":"#/definitions/Environment"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Environments"],"summary":"Creates an Environment","operationId":"createEnvironment","parameters":[{"in":"body","name":"environment","description":"The representation of an Environment to create","required":true,"schema":{"$ref":"#/definitions/Environment"}}],"responses":{"201":{"description":"Environment was created successfully.","schema":{"$ref":"#/definitions/Environment"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}}},"/apis/{proxyId}/teams/relationships":{"get":{"tags":["API Proxy to Team Relationships"],"summary":"Get the list teams ids that are related to the proxy","operationId":"getProxyTeamRelationships","parameters":[],"responses":{"200":{"description":"Returns the IDs of associated team","schema":{"type":"array","items":{"type":"string"}}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/certChains":{"post":{"tags":["Certificates"],"summary":"Creates a Cert Chain","operationId":"createCertChain","parameters":[{"$ref":"#/parameters/CertChainBodyParam"}],"responses":{"201":{"description":"Cert Chain was created successfully","schema":{"$ref":"#/definitions/CertChain"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/roles":{"get":{"tags":["Roles"],"summary":"List all roles","description":"List all out-of-the-box and custom roles\n","operationId":"getRoles","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of roles. The related permissions are contained within the _embedded metadata for each role.","schema":{"title":"Roles","type":"array","items":{"$ref":"#/definitions/Role"}}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Roles"],"summary":"Create a role","description":"Create a new custom role. A role has a set of related permissions. \nA set of out-of-the-box roles are provided.      \n","operationId":"createRole","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"role","description":"Role representation","required":true,"schema":{"$ref":"#/definitions/Role"}}],"responses":{"201":{"description":"The created role. The related permissions are contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Role"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/revisions/{revision}/policies/verify-jwt-key":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the JWT Key policy body for a specific revision of the API proxy.","operationId":"getJwtKeyPolicy","parameters":[],"responses":{"200":{"description":"The requested details for JWT Key policy","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a JWT Key policy for a specific API proxy revision.","operationId":"overwriteJwtKeyPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/serviceAccounts/{serviceAccountClientId}":{"get":{"tags":["Service Accounts"],"summary":"Retrieve a Service Account","description":"Get the details of a single service account.\n","operationId":"getServiceAccount","parameters":[],"responses":{"200":{"description":"The retrieved service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Service Accounts"],"summary":"Delete a Service Account","description":"Delete a Service Account associated with a clientId.\n","operationId":"deleteServiceAccount","parameters":[],"responses":{"204":{"description":"The Service Account deleted successfully"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/ServiceAccountClientIdParam"}]},"/permissions":{"get":{"tags":["Permissions"],"summary":"List all permissions","description":"List custom and out-of-the-box permissions. No role information is returned.\n","operationId":"getPermissions","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of permissions","schema":{"title":"Permissions","type":"array","items":{"$ref":"#/definitions/Permission"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Permissions"],"summary":"Create a permission","description":"Create a new custom permission. Permissions are assigned to users through roles.\n","operationId":"createPermission","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"permission","description":"Permission representation","required":true,"schema":{"$ref":"#/definitions/Permission"}}],"responses":{"201":{"description":"The created permission","schema":{"$ref":"#/definitions/Permission"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/bulkSwaggerDownload":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy''s Swagger download","operationId":"bulkSwaggerDownload","produces":["application/zip"],"parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"A list of errors, if any."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/swaggers":{"post":{"tags":["Swagger Validation"],"summary":"Returns the content and warnings(if any) in the swagger passed as file","operationId":"readFromJsonStream","consumes":["application/octet-stream","multipart/form-data"],"parameters":[{"name":"specification","in":"formData","description":"The swagger file","required":true,"type":"file"}],"responses":{"200":{"description":"Ok","schema":{"$ref":"#/definitions/ValidatedSwagger"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroups":{"get":{"tags":["RuntimeGroups"],"summary":"Returns a list of all Runtime Groups.","operationId":"getRuntimeGroups","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of Runtime Groups.","schema":{"type":"array","items":{"$ref":"#/definitions/RuntimeGroup"}}},"400":{"description":"Wrong filtering parameters."}}},"post":{"tags":["RuntimeGroups"],"summary":"Creates a Runtime Group","operationId":"createRuntimeGroup","parameters":[{"in":"body","name":"runtimeGroup","description":"The representation of the Runtime Group to create","required":true,"schema":{"$ref":"#/definitions/RuntimeGroup"}}],"responses":{"201":{"description":"Runtime Group was created successfully.","schema":{"$ref":"#/definitions/RuntimeGroup"}},"409":{"description":"Duplicate Runtime Group name"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"}]},"/roles/{roleId}":{"get":{"tags":["Roles"],"summary":"Get a role","description":"Get role details\n","operationId":"getRole","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/RoleIdParam"}],"responses":{"200":{"description":"The retrieved role. The related permissions are contained within the _embedded metadata.","schema":{"$ref":"#/definitions/Role"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/applications/{applicationId}/profiles":{"get":{"tags":["Applications"],"summary":"Retrieve Profiles","description":"Retrieve all the Profiles based on selected type for the specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getProfilesForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of Profiles specified by type for application","schema":{"title":"Profiles","type":"array","items":{}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create a Profile","description":"Create a Profile for a specified application.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createProfileForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"profile","description":"Profile representation","required":true,"schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}}],"responses":{"201":{"description":"The created Profile","schema":{"allOf":[{"$ref":"#/definitions/SSHPublicKeyProfile"},{"$ref":"#/definitions/PublicCertificateProfile"},{"$ref":"#/definitions/AuthenticationProfile"},{"$ref":"#/definitions/SFTPProfile"},{"$ref":"#/definitions/FTPProfile"},{"$ref":"#/definitions/JWTKeyProfile"},{"$ref":"#/definitions/OAuthClientProfile"}]}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/featureFlags/{featureFlagId}":{"get":{"tags":["Feature flags admin operations"],"summary":"Retrieves a feature flag given its identifier","operationId":"getFeatureFlag","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/FeatureFlag"}},"400":{"description":"Bad Request."},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"put":{"tags":["Feature flags admin operations"],"summary":"Override a Feature flag","operationId":"overrideFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlag"}}],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["Feature flags admin operations"],"summary":"Removes a feature flag","operationId":"removeFeatureFlag","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"patch":{"tags":["Feature flags admin operations"],"summary":"Override a Feature flag","operationId":"updateFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlagPatch"}}],"responses":{"204":{"description":"No Content"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"}]},"/publishedItems/{publishedItemId}":{"get":{"tags":["Published Catalog Items"],"summary":"Get published catalog item by id","operationId":"getPublishedItemById","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/PublishedApiProxy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/PublishedItemIdParam"}]},"/apis/bulkPut":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk overwrite API proxies","operationId":"bulkOverwriteProxy","parameters":[{"in":"body","name":"proxies","description":"The changes to apply.","required":true,"schema":{"type":"array","items":{"$ref":"#/definitions/APIProxy"}}}],"responses":{"200":{"description":"A list of errors, if any."},"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/revisions/{revision}/policies/be-auth-http-basic":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the HTTP Basic Auth policy body for a specific revision of the API proxy.","operationId":"getBasicAuthPolicy","parameters":[],"responses":{"200":{"description":"The requested details for HTTP Basic Auth policy","schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a HTTP Basic Auth policy for a specific API proxy revision.","operationId":"overwriteHttpBasicAuthPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/HttpBasicAuthPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/apis/{proxyId}/revisions/{revision}/policies/verify-oauth-token":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the Oauth policy for a specific revision of the API proxy.","operationId":"getOauthTokenPolicy","parameters":[],"responses":{"200":{"description":"The requested details for Oauth Token","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a Oauth policy for a specific revision of the API proxy.","operationId":"overwriteOauthTokenPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/apis/{proxyId}/revisions/{revision}/policies/verify-api-key":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the API Key policy body for a specific revision of the API proxy.","operationId":"getApiKeyPolicy","parameters":[],"responses":{"200":{"description":"The requested policy details for API Key policy","schema":{"$ref":"#/definitions/GenericPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite API Key policy for a specific API proxy revision.","operationId":"overwriteApiKeyPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/GenericPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/GenericPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/featureFlags/{featureFlagId}/overrides/{featureFlagOverrideId}":{"get":{"tags":["Feature flags admin operations on logical instances"],"summary":"Retrieves a feature flag override given its identifier and the feature flag identifier","operationId":"getFeatureFlagOverride","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/FeatureFlagOverride"}},"400":{"description":"Bad Request."},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found."}}},"put":{"tags":["Feature flags admin operations on logical instances"],"summary":"Update the feature flag override for the logical instance","operationId":"updateFeatureFlagOverride","parameters":[{"in":"body","name":"featureFlagOverride","description":"The changes to apply","required":true,"schema":{"$ref":"#/definitions/FeatureFlagOverride"}}],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}}},"delete":{"tags":["Feature flags admin operations on logical instances"],"summary":"Removes a feature flag","operationId":"removeFeatureFlagForLogicalInstance","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"},{"$ref":"#/parameters/FeatureFlagOverrideIdParam"}]},"/featureFlags/{featureFlagId}/overrides":{"get":{"tags":["Feature flags admin operations on logical instances"],"summary":"Retrieves the list of the overriden feature flags for different tenant instance ids","operationId":"getLogicalInstancesFeatureFlags","parameters":[{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of feature flags overrides for tenant logical instance ids","headers":{"Link":{"type":"string","description":"Pagination relative URI links"}},"schema":{"type":"array","items":{"$ref":"#/definitions/FeatureFlagOverride"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Feature flags admin operations on logical instances"],"summary":"Override feature flag for a tenant logical instance id","operationId":"overrideFeatureFlagForLogicalInstance","parameters":[{"in":"body","name":"enabled","description":"Whether to allow or not a tenant logical instance to use the feature","required":true,"schema":{"$ref":"#/definitions/FeatureFlagOverride"}}],"responses":{"201":{"description":"Returns the created tenant feature flag override","schema":{"$ref":"#/definitions/FeatureFlagOverride"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Duplicate feature flag key"}}},"parameters":[{"$ref":"#/parameters/FeatureFlagIdParam"}]},"/users/{userId}":{"get":{"tags":["Users"],"summary":"Get a user","description":"Get the details of a single API Central user \n","operationId":"getUser","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The retrieved user details. The user''s team and role data is contained within the _embedded metadata.","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Users"],"summary":"Overwrite a user","description":"Overwrite a user completely. No details of the original user are retained other than the id.\nA user should belong to at least one team, or have one or more admin roles.\nA user cannot overwrite themselves.\n","operationId":"overwriteUser","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"},{"in":"body","name":"user","description":"User representation","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"200":{"description":"The details of the user that was overwritten","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Users"],"summary":"Delete a user","description":"Delete the specified user. A user cannot delete themselves.\n","operationId":"deleteUser","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"204":{"description":"The user was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/publishedItems":{"get":{"tags":["Published Catalog Items"],"summary":"Returns a list of all published catalog items","operationId":"getPublishedItems","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/PublishedApiProxy"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/apis/{proxyId}/image":{"get":{"tags":["API Proxy Image"],"summary":"Gets the API Proxy image","operationId":"getProxyImage","produces":["image/jpeg","image/png"],"parameters":[],"responses":{"200":{"description":"OK"},"404":{"description":"Not Found, No image is associated to this proxy."}}},"post":{"tags":["API Proxy Image"],"summary":"Set the image for the frontend API. The maximum file size is set to 1024 Kb.","description":"Set the jpeg image to be associated with the API.","operationId":"setProxyImage","consumes":["multipart/form-data"],"produces":["application/json"],"parameters":[{"name":"file","in":"formData","required":true,"type":"file"}],"responses":{"200":{"description":"Ok"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"413":{"description":"Request Entity Too Large"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/featureFlags":{"get":{"tags":["Feature flags admin operations"],"summary":"Retrieves the list of the defined feature flags","operationId":"getFeatureFlags","parameters":[{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of feature flags","headers":{"Link":{"type":"string","description":"Pagination relative URI links"}},"schema":{"type":"array","items":{"$ref":"#/definitions/FeatureFlag"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"post":{"tags":["Feature flags admin operations"],"summary":"Creates a new feature flag","operationId":"createFeatureFlag","parameters":[{"in":"body","name":"featureFlag","description":"The feature flag resource","required":true,"schema":{"$ref":"#/definitions/FeatureFlag"}}],"responses":{"201":{"description":"Returns the created feature flag","schema":{"$ref":"#/definitions/FeatureFlag"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Duplicate feature flag key"}}}},"/runtimeGroups/{runtimeGroupId}":{"get":{"tags":["RuntimeGroups"],"summary":"Gets a Runtime Group by ID","operationId":"getRuntimeGroup","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/RuntimeGroup"}},"404":{"description":"Runtime Group not found"}}},"put":{"tags":["RuntimeGroups"],"summary":"Overwrites a RuntimeGroup","operationId":"overwriteRuntimeGroup","parameters":[{"in":"body","name":"runtimeGroup","description":"Full representation of the RuntimeGroup object to overwrite existing one.","required":true,"schema":{"$ref":"#/definitions/RuntimeGroup"}}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/RuntimeGroup"}},"404":{"description":"Runtime Group not found"},"409":{"description":"Duplicate runtime group name"}}},"delete":{"tags":["RuntimeGroups"],"summary":"Deletes a Runtime Group.","operationId":"deleteRuntimeGroup","parameters":[],"responses":{"204":{"description":"Runtime Group was deleted successfully."},"404":{"description":"Runtime Group not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/apis/{proxyId}/revisions/{revision}":{"get":{"tags":["API Proxy Revision"],"summary":"Gets a specific revision of an API proxy.","operationId":"getProxyRevision","parameters":[],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Revision"],"summary":"Overwrite a revision","operationId":"overwriteProxyRevision","parameters":[{"in":"body","name":"proxy","description":"The changes to apply.","required":true,"schema":{"$ref":"#/definitions/APIProxyRevision"}}],"responses":{"201":{"description":"Returns the updated proxy","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["API Proxy Revision"],"summary":"Deletes the API Proxy revision and all associated policies and resources.","operationId":"deleteProxyRevision","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/applications/{applicationId}/apiKeys":{"get":{"tags":["Applications"],"summary":"Retrieve API keys","description":"Retrieve all the API keys for the specified application.  \nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getApiKeysForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The list of API keys for application","schema":{"title":"APIKeys","type":"array","items":{"$ref":"#/definitions/APIKey"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an API key","description":"Create an API key for the application. An API key may be imported or generated by the server if not\nspecified. The API key can have a start and/or end validity date specified.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createApiKeyForApplication","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"apiKey","description":"APIKey representation","required":true,"schema":{"$ref":"#/definitions/APIKey"}}],"responses":{"200":{"description":"The created API key","schema":{"$ref":"#/definitions/APIKey"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/apis/bulkDelete":{"post":{"tags":["API Proxy Bulk Operations"],"summary":"Bulk API Proxy delete. The API will make a best effort to delete the specified proxies.","operationId":"bulkDeleteProxy","parameters":[{"in":"body","name":"apiIds","description":"The API Proxy IDs","required":true,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"description":"One or more proxies could not be deleted. A list detailing the errors will be returned."},"204":{"description":"All specified proxy have been deleted"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/userInfo":{"get":{"tags":["User Info"],"summary":"Get the current user''s information","description":"Get the user details for the currently authenticated user. The user''s evaluated permissions\nand user preferences are returned as part of the _embedded data in the evaluatedPermissions\nand preferences fields. \n","operationId":"getUserInfo","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"}],"responses":{"200":{"description":"The current user details. The current user''s team and role data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/User"}},"401":{"description":"Unauthorized, user failed to authenticate"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/listeners/{listenerId}":{"put":{"tags":["Listeners"],"description":"Edit a listener","operationId":"updateListener","parameters":[{"in":"body","name":"body","description":"Listener representation","required":true,"schema":{"$ref":"#/definitions/Listener"}}],"responses":{"200":{"description":"Listener","schema":{"$ref":"#/definitions/Listener"}},"404":{"description":"Listener not found"}}},"delete":{"tags":["Listeners"],"summary":"Deletes a Listener.","operationId":"deleteListener","parameters":[],"responses":{"204":{"description":"Listener was deleted successfully."},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ListenerIdParam"}]},"/users":{"get":{"tags":["Users"],"summary":"List all users","description":"List all users registered in API Central\n","operationId":"getUsers","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of users. Each user''s team and role data is contained within the _embedded metadata.\n","schema":{"title":"Users","type":"array","items":{"$ref":"#/definitions/User"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Users"],"summary":"Create a user","description":"A user should belong to at least one team, or have one or more admin roles. \n","operationId":"createUser","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"in":"body","name":"user","description":"User representation","required":true,"schema":{"$ref":"#/definitions/User"}}],"responses":{"201":{"description":"The created user. The user''s team and role data is contained within the _embedded metadata.\n","schema":{"$ref":"#/definitions/User"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/apis/{proxyId}/revisions/{revision}/policies/rate-limit":{"get":{"tags":["API Proxy Policies"],"summary":"Returns the Rate Limit policy body for a specific revision of the API proxy.","operationId":"getRequestRateLimitPolicy","parameters":[],"responses":{"200":{"description":"The policy details for Rate Limit policy on client requests","schema":{"$ref":"#/definitions/RateLimitingPolicy"}},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Policies"],"summary":"Overwrite a Rate Limiting policy for a specific API proxy revision.","operationId":"overwriteRateLimitingPolicy","parameters":[{"in":"body","name":"policy","description":"The policy details for a policy","required":true,"schema":{"$ref":"#/definitions/RateLimitingPolicy"}}],"responses":{"201":{"description":"The created or updated policy details","schema":{"$ref":"#/definitions/RateLimitingPolicy"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"}]},"/deployments":{"get":{"tags":["Api Deployment"],"summary":"Retrieves the list of api deployments.","operationId":"getDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"List of api deployments","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}}}},"post":{"tags":["Api Deployment"],"summary":"Deploys an api.","operationId":"deployApi","parameters":[{"in":"body","name":"deployment","description":"The api deployment resource","required":true,"schema":{"$ref":"#/definitions/APIDeployment"}}],"responses":{"201":{"description":"Returns the created deployment","schema":{"$ref":"#/definitions/APIDeployment"}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not found"},"409":{"description":"Duplicate deployment"},"422":{"description":"Unprocessable entity"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/runtimeGroupsRelationships/{teamId}":{"get":{"tags":["RuntimeGroup Relationships"],"summary":"Returns a list of RuntimeGroup owened by the accessor.","operationId":"getAllRuntimeGroupByTeam","parameters":[],"responses":{"200":{"description":"RuntimeGroup","schema":{"type":"array","items":{"$ref":"#/definitions/RuntimeGroup"}}},"400":{"description":"Wrong accessor identity."}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}]},"/swaggers/{url}":{"get":{"tags":["Swagger Validation"],"summary":"Returns the content and warnings(if any) in the swagger passed as url","operationId":"downloadFromUrl","parameters":[{"name":"url","in":"path","description":"The URL of the swagger specification","required":true,"type":"string","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"}],"responses":{"200":{"description":"Ok","schema":{"$ref":"#/definitions/ValidatedSwagger"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"}]},"/featureFlagsStatus":{"get":{"tags":["Feature flags admin runtime operations"],"summary":"Retrieves the list of active feature flags keys","operationId":"getFeatureFlagsStatus","parameters":[],"responses":{"200":{"description":"List of allowed feature flags for the specified instance id","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}}},"parameters":[{"$ref":"#/parameters/InstanceIdSearchQuery"}]},"/environments/{environmentId}":{"get":{"tags":["Environments"],"summary":"Gets an Environment by ID","operationId":"getEnvironment","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/EnvironmentIdParam"}],"responses":{"200":{"description":"OK","schema":{"$ref":"#/definitions/Environment"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["Environments"],"summary":"Deletes an Environment.","operationId":"deleteEnvironment","parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/EnvironmentIdParam"}],"responses":{"204":{"description":"Environment was deleted successfully."},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}}},"/runtimeGroups/{runtimeGroupId}/relationships":{"get":{"tags":["RuntimeGroup Relationships"],"summary":"Gets the RuntimeGroup Relationships","operationId":"getRuntimeGroupRelationships","parameters":[],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"type":"string"}}}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/TeamHeader"},{"name":"runtimeGroupId","in":"path","description":"The ID of the Runtime Group.","required":true,"type":"string"}]},"/userInfo/preferences/{preferenceName}":{"put":{"tags":["User Preferences"],"summary":"Create or overwrite a user preference","description":"Create or overwrite a user preference name-value pair\n","operationId":"overwriteUserPreference","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/PreferenceNameParam"},{"in":"body","name":"userPreference","description":"User preference value","required":true,"schema":{"$ref":"#/definitions/UserPreference"}}],"responses":{"200":{"description":"The user preference","schema":{"$ref":"#/definitions/UserPreference"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["User Preferences"],"summary":"Delete a user preference","description":"Delete a user preference name-value pair\n","operationId":"deleteUserPreference","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/PreferenceNameParam"}],"responses":{"204":{"description":"The user preference was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/users/{userId}/teams":{"get":{"tags":["Users"],"summary":"Get a user''s teams","description":"Get the list of teams that a user is a member of\n","operationId":"getUserTeams","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/UserIdParam"}],"responses":{"200":{"description":"The list of teams the user is a member of","schema":{"title":"Teams","type":"array","items":{"$ref":"#/definitions/Team"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}}},"/serviceAccounts":{"get":{"tags":["Service Accounts"],"summary":"Retrieve service accounts","description":"Retrieve all service accounts.\n","operationId":"getServiceAccounts","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/PageSizeParam"},{"$ref":"#/parameters/PageNumberParam"},{"$ref":"#/parameters/SortParam"},{"$ref":"#/parameters/SearchQuery"}],"responses":{"200":{"description":"The list of service accounts","schema":{"title":"ServiceAccounts","type":"array","items":{"$ref":"#/definitions/ServiceAccount"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"}},"security":[{"Bearer":[]}]},"post":{"tags":["Service Accounts"],"summary":"Create a service account","description":"Create a service account.\n","operationId":"createServiceAccount","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"in":"body","name":"serviceAccountRequest","description":"The service account request","required":true,"schema":{"$ref":"#/definitions/ServiceAccountRequest"}}],"responses":{"201":{"description":"The created service account.","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]},"parameters":[{"$ref":"#/parameters/TenantHeader"}]},"/applications/{applicationId}/apiaccess":{"get":{"tags":["Applications"],"summary":"Retrieve API accesses","description":"Retrieve the API accesses for the specified application\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"getAPIAccess","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"}],"responses":{"200":{"description":"The list of API accesses for the application","schema":{"title":"APIAccesses","type":"array","items":{"$ref":"#/definitions/APIAccess"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"post":{"tags":["Applications"],"summary":"Create an API access","description":"Create an API access for the application. An API access gives the application access\nto an API proxy.\nIf the user is working within a team context, the application must belong to the user''s currently selected team.\n","operationId":"createAPIAccessForApplication","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/ApplicationIdParam"},{"in":"body","name":"apiAccess","description":"APIAccess representation","required":true,"schema":{"$ref":"#/definitions/APIAccess"}}],"responses":{"200":{"description":"The created API access","schema":{"$ref":"#/definitions/APIAccess"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"},"409":{"description":"Conflict, this entity already exists"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}/applications":{"get":{"tags":["Teams"],"summary":"Get a team''s applications","description":"Get all applications belonging to a team. A team can have multiple applications. \nAn application belongs to only one team.   \n","operationId":"getTeamApplications","produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"A list of applications associated with the team. The application''s team data is contained within the _embedded metadata.","schema":{"title":"Applications","type":"array","items":{"$ref":"#/definitions/Application"}}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/teams/{teamId}":{"get":{"tags":["Teams"],"summary":"Get a team","description":"Get the details of a single team\n","operationId":"getTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"200":{"description":"The retrieved team details","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"put":{"tags":["Teams"],"summary":"Overwrite a team basic details","description":"Overwrite a team basic details.\n","operationId":"overwriteTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"},{"in":"body","name":"team","description":"Team basic details","required":true,"schema":{"$ref":"#/definitions/Team"}}],"responses":{"200":{"description":"The details of the team that was overwritten","schema":{"$ref":"#/definitions/Team"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]},"delete":{"tags":["Teams"],"summary":"Delete a team","description":"Delete the specified team\n","operationId":"deleteTeam","parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/TeamHeader"},{"$ref":"#/parameters/TeamIdParam"}],"responses":{"204":{"description":"The team was deleted successfully"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}},"/userFeatureFlags":{"get":{"tags":["Feature flags user operations"],"summary":"Retrieves the list of allowed feature flags","operationId":"getUserFeatureFlagsStatus","parameters":[],"responses":{"200":{"description":"List of allowed feature flags","schema":{"type":"array","items":{"type":"string"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"}}}},"/apis/{proxyId}/revisions/{revision}/resources/{resourceId}":{"get":{"tags":["API Proxy Resources"],"summary":"Return the specific resource metadata","operationId":"getResourceMetadata","produces":["application/json","application/xml"],"parameters":[],"responses":{"200":{"description":"Returns the resource","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"put":{"tags":["API Proxy Resources"],"summary":"Overwrite a resource in an API proxy","operationId":"overwriteResource","consumes":["multipart/form-data"],"parameters":[{"name":"name","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"type","in":"formData","description":"The name of the resource.","required":true,"type":"string","maxLength":100,"format":"string"},{"name":"file","in":"formData","description":"The uploaded file data","required":true,"type":"file"}],"responses":{"200":{"description":"Returns the resource","schema":{"$ref":"#/definitions/Resource"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"delete":{"tags":["API Proxy Resources"],"summary":"Deletes the specific resource.","operationId":"deleteResource","parameters":[],"responses":{"204":{"description":"OK"},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"},{"$ref":"#/parameters/RevisionParam"},{"name":"resourceId","in":"path","description":"The resource id","required":true,"type":"string","maxLength":32,"minLength":32}]},"/apis/{id}/deployments":{"get":{"tags":["API Proxy"],"summary":"Retrieves all deployments for a given api/proxy","operationId":"getProxyRevisionDeployments","parameters":[{"$ref":"#/parameters/OffsetParam"},{"$ref":"#/parameters/CountParam"},{"$ref":"#/parameters/SortParam"}],"responses":{"200":{"description":"OK","schema":{"type":"array","items":{"$ref":"#/definitions/APIDeployment"}}},"400":{"description":"Bad Request"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Proxy not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/IdParam"}]},"/apis/{proxyId}/revisions/clone":{"post":{"tags":["API Proxy Revision"],"summary":"Creates a new revision cloning a specific one.","operationId":"cloneProxyRevision","consumes":["application/x-www-form-urlencoded"],"produces":["application/json"],"parameters":[{"name":"revision","in":"formData","description":"The revision to clone.","required":true,"type":"integer","format":"int32"}],"responses":{"201":{"description":"Returns the new proxy revision","schema":{"$ref":"#/definitions/APIProxyRevision"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}}},"parameters":[{"$ref":"#/parameters/InstanceHeader"},{"$ref":"#/parameters/ProxyIdParam"}]},"/serviceAccounts/{serviceAccountClientId}/certificate":{"put":{"tags":["Service Accounts"],"summary":"Upload/update a public key for the service account in .pem format","description":"Upload/update a public key for the service account in .pem format.\n","operationId":"uploadPublicKey","consumes":["application/json"],"produces":["application/json"],"parameters":[{"$ref":"#/parameters/TenantHeader"},{"$ref":"#/parameters/ServiceAccountClientIdParam"},{"in":"body","name":"certificate","description":"Certificate representation","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The updated service account containing a renewed registration access token","schema":{"$ref":"#/definitions/ServiceAccount"}},"400":{"description":"Bad Request, failed to validate request parameters"},"401":{"description":"Unauthorized, user failed to authenticate"},"403":{"description":"Forbidden, the user does not have the correct permissions to call this API"},"404":{"description":"Not Found, a required entity was not found"}},"security":[{"Bearer":[]}]}}},"securityDefinitions":{"Bearer":{"type":"apiKey","name":"Authorization","in":"header"}},"definitions":{"AuditMetadata":{"type":"object","properties":{"createTimestamp":{"type":"string","format":"date-time","description":"The creation time"},"createUserId":{"type":"string","description":"Id of the user that created the entity","minLength":32,"maxLength":36},"modifyTimestamp":{"type":"string","format":"date-time","description":"The last modification time"},"modifyUserId":{"type":"string","description":"Id of the user that last modified the entity","minLength":32,"maxLength":36}}},"FeatureFlagStatus":{"type":"object","properties":{"allowed":{"type":"boolean","description":"Defines if the feature flag for the provided key is allowed"}}},"PlatformTeam":{"type":"object","required":["guid","name"],"properties":{"guid":{"type":"string","description":"The id of the platform team","minLength":32,"maxLength":36},"name":{"type":"string","description":"The name of the platform team","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"default":{"type":"boolean","description":"Flag to indicate if this team is default or not","default":false}}},"ServiceAccountRequest":{"type":"object","required":["serviceAccountType"],"properties":{"environmentId":{"type":"string","description":"The environment identifier, required for AASA, CASA and MASA service accounts","minLength":32,"maxLength":32},"serviceAccountType":{"type":"string","format":"text","description":"The service account type","enum":["AASA","CASA","MASA","DOSA"]},"serviceAccountName":{"type":"string","description":"The service account name, required for DOSA service accounts","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"generateKeypair":{"type":"boolean","description":"Generate a new keypair, associate public key with service account and return private key","default":false},"pemEncodedPublicKey":{"type":"string","description":"Service Account PEM Encoded Public Key","maxLength":524288}},"description":"A Service Account Request\n"},"FeatureFlag":{"type":"object","required":["key","name"],"properties":{"id":{"type":"string","description":"Unique identifier","minLength":32,"maxLength":32},"key":{"type":"string","description":"Key","pattern":"^[A-Za-z0-9_\\-\\.]{3,128}$"},"name":{"type":"string","description":"Name","minLength":1,"maxLength":100},"description":{"type":"string","description":"Description","maxLength":350},"deployed":{"type":"boolean","description":"If the service that owns the feature flag is deployed","default":false},"enabled":{"type":"boolean","description":"Valid for all tenants unless overwritten at tenant level","default":false},"forceDisabled":{"type":"boolean","description":"Forces the feature flag to be disabled, any overwrides at tenant level are ignored","default":false},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"ProxyExternalReference":{"type":"object","required":["externalId","externalType"],"properties":{"id":{"type":"string","description":"Proxy external reference unique identifier"},"externalType":{"type":"string","description":"The type of the external reference."},"externalId":{"type":"string","description":"The id of the external reference."},"proxyId":{"type":"string","description":"API Proxy unique identifier"},"state":{"type":"string","enum":["AVAILABLE","UNAVAILABLE"],"default":"AVAILABLE"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"CreateProxyRevisionIgnoreFlags":{"type":"string","enum":["ResponsePolicies","RateLimitingPolicy"]},"ExportedTeam":{"type":"object","properties":{"guid":{"type":"string","description":"The team guid"},"name":{"type":"string","description":"The team name"},"desc":{"type":"string","description":"The team description"},"default":{"type":"boolean","description":"Indicates if is default team"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"APIAccess":{"type":"object","required":["applicationId","proxyId","runtimeGroupId"],"properties":{"id":{"type":"string","description":"The id for the API access","minLength":32,"maxLength":32},"proxyId":{"type":"string","description":"The API proxy id","minLength":32,"maxLength":32},"metadata":{"$ref":"#/definitions/AuditMetadata"},"applicationId":{"type":"string","description":"The id of the application to which this API access belongs","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The id of the runtime group to which this API access belongs","minLength":32,"maxLength":32}}},"GenericPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["configuration"],"properties":{"configuration":{"type":"string","description":"The configuration details, this may be JSON content escaped and held as a string"},"secret":{"type":"boolean","description":"Flag to indicate if the configuration field is encrypted, this field will be decrypted","default":true}}}],"description":"A generic policy, configuration details are held in a string field"},"OAuthClientProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["issuer","oauthClientId"],"properties":{"oauthClientId":{"type":"string","description":"The client id - that is generated by the external authorization server","minLength":1,"maxLength":50},"issuer":{"type":"string","description":"The issuer that produced the Token in url format","maxLength":256,"pattern":"^(https):[\\w-_\\:\\.\\?\\/]*$"},"metaDataPath":{"type":"string","description":"The path of the metadata relative to the issuer url, standard URI is /.well-known/oauth-authorization-server","maxLength":256,"pattern":"^[\\w-_\\#\\:\\.\\?\\/]*$","default":"/.well-known/oauth-authorization-server"},"startTimestamp":{"type":"string","description":"The start time of the validity period, if not specified the JWT key will be valid from creation time. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"},"endTimestamp":{"type":"string","description":"The end time of the validity period, if not specified the JWT key will not expire. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"}}}]},"Permission":{"type":"object","required":["name","permission"],"properties":{"id":{"type":"string","description":"The id for the permission","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the permission","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"permission":{"type":"string","description":"The permission string e.g. team:create","minLength":1,"maxLength":100,"pattern":"^[a-z0-9\\*\\:\\.-]*$"},"description":{"type":"string","description":"The description of the permission","maxLength":350,"pattern":"^[ -~\\s]*$"},"category":{"type":"string","description":"The category of the permission, e.g. team","maxLength":100,"pattern":"^[ -~\\s]*$"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"UserPreference":{"type":"object","properties":{"value":{"type":"string","description":"The user preference field value","maxLength":350,"pattern":"^[ -~\\s]*$"}}},"Sync":{"allOf":[{"$ref":"#/definitions/Listener"},{"properties":{"instanceName":{"type":"string","description":"Listener instance name","default":"axway"},"tenantId":{"type":"string","description":"Name of the tenant (or Org in SaaS model) that the listener belongs to","title":"Sync_with_Tenant_ID"}}}]},"ProxyEndpoint":{"required":["resourcePath"],"properties":{"specificationId":{"type":"string","description":"A reference to the API Proxy Swagger''s resource id."},"resourcePath":{"type":"string","description":"The resourcePath is a URI fragment (for example /weather)\nappended to the base URL of an API proxy (for example, http://test.gg.com).\nresourcePath must be unique within an environment. Uniqueness is\nvalidated when an API proxy is generated or imported.\n","maxLength":128}}},"ExportedUser":{"type":"object","properties":{"guid":{"type":"string","description":"The Platform user guid"},"roles":{"type":"array","description":"List of admin-level roles","items":{"type":"string"}},"team_roles":{"type":"array","description":"List of team-level roles for each team the user is a member of","items":{"$ref":"#/definitions/ExportedTeamRoles"}},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"FeatureFlagPatch":{"type":"object","properties":{"name":{"type":"string","description":"Name","maxLength":100},"description":{"type":"string","description":"Description","maxLength":350},"enabled":{"type":"boolean","description":"Global feature flag override for enabled field"},"deployed":{"type":"boolean","description":"Global feature flag override for deployed field"},"forceDisabled":{"type":"boolean","description":"Global feature flag override for forceDisabled field"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"Resource":{"type":"object","properties":{"id":{"type":"string","description":"Resource unique identifier","minLength":32,"maxLength":32},"name":{"type":"string","description":"the name of the resource","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"type":{"type":"string","description":"the type of the resource","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"}}},"FTPProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["host","port"],"properties":{"host":{"type":"string","description":"Host","pattern":"^([a-zA-Z]\\w+(\\.?[\\w-]+)+\\.?)|((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$"},"port":{"type":"integer","description":"The port number","minimum":1,"maximum":65535},"clientAuthenticationRequired":{"type":"string","description":"Client side Authentication has to be set if SSL enabled.","enum":["YES","NO","OPTIONAL"]},"ssl":{"type":"string","enum":["ENABLED","DISABLED"],"default":"DISABLED"},"connectionMode":{"type":"string","enum":["ACTIVE","PASSIVE","BOTH"],"default":"PASSIVE"},"rangePortFrom":{"type":"integer","description":"The rangePort Min number only if connection mode is Passive or Both.","minimum":1024,"maximum":65535},"rangePortTo":{"type":"integer","description":"The rangePort Max number only if connection mode is Passive or Both.","minimum":1024,"maximum":65535}}}],"description":"Profile for FTP server connection."},"ExportedOrg":{"type":"object","properties":{"org_id":{"type":"string","description":"The Platform org id"},"teams":{"type":"array","description":"List of teams","items":{"$ref":"#/definitions/ExportedTeam"}},"users":{"type":"array","description":"List of users","items":{"$ref":"#/definitions/ExportedUser"}}}},"APIProxyRevision":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"API Proxy unique identifier"},"revision":{"type":"integer","description":"The proxy revision number."},"name":{"type":"string","description":"The name of the API proxy, which must be unique.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"proxyEndpoint":{"$ref":"#/definitions/ProxyEndpoint"},"targetEndpoint":{"$ref":"#/definitions/TargetEndpoint"},"governance":{"$ref":"#/definitions/Governance"},"policies":{"type":"array","description":"Policies associated with the API Proxy revision.","items":{"type":"string"}},"resources":{"type":"array","description":"Resources associated with the API Proxy revision.","items":{"$ref":"#/definitions/Resource"}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"RateLimitingPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["perProxy","perProxyAndApplication"],"properties":{"perProxy":{"$ref":"#/definitions/RateLimitingPolicyLevelDefinition"},"perProxyAndApplication":{"$ref":"#/definitions/RateLimitingPolicyLevelDefinition"}}}],"description":"Rate Limiting Policy details"},"Role":{"type":"object","required":["name","type"],"properties":{"id":{"type":"string","description":"The id for the role","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the role","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"type":{"type":"string","description":"The type of the role. An ADMIN role is a global cross-team role. A TEAM role is specific to a role within a team.","enum":["ADMIN","TEAM"]},"description":{"type":"string","description":"The description of the role","maxLength":350,"pattern":"^[ -~\\s]*$"},"permissions":{"type":"array","description":"List of permission ids that are associated with this role","items":{"type":"string"}},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}}},"APIDeploymentState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["DEPLOYED_ACTIVE","DEPLOYED_INACTIVE","UNDEPLOYED"],"default":"DEPLOYED_ACTIVE"}}},"APIDeployment":{"type":"object","required":["proxyId","proxyRevision","runtimeGroupId"],"properties":{"id":{"type":"string","description":"Api deployment unique identifier.","minLength":32,"maxLength":32},"environmentId":{"type":"string","description":"The environment unique identifier.","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The runtime group unique identifier.","minLength":32,"maxLength":32},"proxyId":{"type":"string","description":"Proxy unique identifier.","minLength":32,"maxLength":32},"proxyRevision":{"type":"integer","description":"Proxy revision identifier."},"resourcePath":{"type":"string","description":"Resource path."},"deploymentUrls":{"type":"array","description":"List of deployment urls. A deployment url is a concatination of a runtime group endpoint and the proxy resource path.","items":{"type":"string"}},"state":{"$ref":"#/definitions/APIDeploymentState"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"Environment":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"Environment unique identifier.","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the Environment which must be unique.","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"metadata":{"$ref":"#/definitions/AuditMetadata"}},"description":"API Central environment"},"RuntimeGroupState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","SUSPENDED"],"default":"ACTIVE"}}},"AuthenticationProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login"],"properties":{"password":{"type":"string","format":"password","description":"The Password","minLength":1,"maxLength":256},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"RateLimitingPolicyLevelDefinition":{"type":"object","required":["enabled"],"properties":{"limit":{"type":"number","description":"Per second limit","minimum":1,"maximum":99999},"enabled":{"type":"boolean","description":"Enable this Rate Limiting Level"}},"description":"Rate Limiting policy level definition"},"Application":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"The id of the application","minLength":32,"maxLength":32},"teamId":{"type":"string","description":"The id of the team to which this application belongs. This will be null if the application is orphaned after a team is deleted. It should be set when an application is created.","minLength":32,"maxLength":36},"name":{"type":"string","description":"The name of the application","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"teamName":{"type":"string","description":"The name of the team to which this application belongs","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the application","maxLength":350,"pattern":"^[ -~\\s]*$"},"enabled":{"type":"boolean","description":"Flag to indicate if this application is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"API Central application"},"MethodOverride":{"type":"object","required":["operationId"],"properties":{"operationId":{"type":"string","description":"API Method operation Id","maxLength":100},"requestPolicies":{"type":"array","description":"The pipeline of policies associated with the request (Inbound).","items":{"type":"string"}},"responsePolicies":{"type":"array","description":"The pipeline of policies associated with the response (Outbound).","items":{"type":"string"}},"authenticationProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"inboundSecurityProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"corsProfile":{"type":"string","maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"}}},"Certificate":{"properties":{"version":{"type":"integer","description":"The version of the certificate"},"validFrom":{"type":"string","format":"date-time","description":"Certificate is valid from this date"},"validTo":{"type":"string","format":"date-time","description":"Certificate is valid to this date"},"signatureAlgorithm":{"type":"string","description":"Signature algorithm of the certificate"},"commonName":{"type":"string","description":"Common Name (CN) of the certificate"},"subject":{"type":"string","description":"Subject of the certificate"},"sha256Hash":{"type":"string","description":"SHA-256 hash of the DER encoded certificate"}}},"ServiceAccount":{"type":"object","required":["clientId","registrationToken","tokenUrl"],"properties":{"name":{"type":"string","description":"The service account name","maxLength":100},"type":{"type":"string","format":"text","description":"The service account type","enum":["AASA","CASA","MASA","DOSA"]},"clientId":{"type":"string","description":"The service account client id","minLength":37,"maxLength":37},"registrationToken":{"type":"string","description":"The service account registration token"},"tokenUrl":{"type":"string","description":"The authorization server token uri","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"aud":{"type":"string","description":"The audience that the Authentication Token is intended for in url format","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"realm":{"type":"string","description":"The authorization Realm","maxLength":20},"certificate":{"$ref":"#/definitions/ServiceAccountCertificate"},"metadata":{"$ref":"#/definitions/AuditMetadata"}},"description":"A Service Account\n"},"Listener":{"type":"object","required":["name","port","protocol","virtualHosts"],"properties":{"id":{"type":"string","description":"Listener id (format is uuid)"},"activated":{"type":"boolean","description":"Listener state","default":true},"name":{"type":"string","description":"Listener name","minLength":1,"maxLength":80},"protocol":{"type":"string","description":"The transfer protocol used","enum":["http","https"]},"bindAddress":{"type":"string","description":"bind Address","default":"0.0.0.0"},"port":{"type":"string","description":"listener port number","minLength":1,"maxLength":5,"default":"80"},"virtualHosts":{"type":"array","description":"list of virtual hosts","items":{"type":"string","minLength":1},"minItems":1},"runtimeGroupId":{"type":"string","description":"Runtime Group id (format is uuid)"},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"User":{"type":"object","required":["preferredName"],"properties":{"id":{"type":"string","description":"The id for the user","minLength":32,"maxLength":32},"instanceId":{"type":"string","description":"The instance id for the user"},"tenantId":{"type":"string","description":"The tenant id for the user"},"environmentId":{"type":"string","description":"The environment id for the user"},"preferredName":{"type":"string","description":"The preferred user name, it should uniquely identify the user","minLength":1,"maxLength":100},"email":{"type":"string","description":"The contact email address associated with the user","maxLength":100,"pattern":"^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"},"enabled":{"type":"boolean","description":"Flag to indicate if this user is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"teamRoles":{"type":"array","description":"The teams the user is a member of, and their role within each team","items":{"$ref":"#/definitions/UserTeamRole"}},"adminRoles":{"type":"array","description":"List of user admin roles","items":{"type":"string","description":"roleId","minLength":32,"maxLength":32}},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"An API Central user\n"},"ValidatedSwagger":{"type":"object","properties":{"warnings":{"type":"array","description":"Warnings generated after validating swagger","items":{"type":"string"}},"swagger":{"type":"string","description":"Content of the validated swagger"}}},"CertChain":{"properties":{"id":{"type":"string","description":"Unique identifier of the Cert Chain","minLength":32,"maxLength":32},"pemEncoded":{"type":"string","description":"Pem encoded cert chain","maxLength":524288},"url":{"type":"string","description":"PEM encoded cert chain is pulled from this URL","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"certificates":{"type":"array","description":"The list of certificate in the chain","readOnly":true,"items":{"$ref":"#/definitions/Certificate"}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"PublishedApiProxy":{"type":"object","required":["description","runtimes","title"],"properties":{"id":{"type":"string","description":"Published API Proxy unique identifier"},"title":{"type":"string","description":"The title of the published API proxy.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the published Api Proxy."},"proxyId":{"type":"string","description":"API Proxy unique identifier"},"runtimes":{"type":"array","description":"The list of runtimes for this proxy.","items":{"type":"string","minLength":32,"maxLength":32}},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"PolicyReference":{"type":"object","required":["id","policy","type"],"discriminator":"type","properties":{"id":{"type":"string","description":"Policy reference unique identifier","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"policy":{"type":"string","description":"URN to the policy","minLength":1,"maxLength":100,"pattern":"^[\\w-_\\:\\.\\/]*$"},"type":{"type":"string","description":"The type of the policy","enum":["GenericPolicy","HttpBasicAuthPolicy","RateLimitingPolicy"],"default":"GenericPolicy"}},"description":"Policy data for client authentication, and backend authentication"},"SFTPProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"description":"Profile with host and port as required fields to be able to connect to SFTP server based on host and port"},{"type":"object","required":["host","port"],"properties":{"host":{"type":"string","description":"Host of SFTP server","pattern":"^([a-zA-Z]\\w+(\\.?[\\w-]+)+\\.?)|((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$"},"port":{"type":"integer","description":"The port number on which to connect to SFTP server","minimum":1,"maximum":65535},"clientAuthentication":{"type":"string","description":"Type of Client Authentication","enum":["PASSWORD","PUBLIC_KEY","PASSWORD_OR_PUBLIC_KEY"],"default":"PUBLIC_KEY"}}}]},"Profile":{"type":"object","required":["name","type"],"discriminator":"type","properties":{"id":{"type":"string","description":"The id of the profile","minLength":32,"maxLength":32},"applicationId":{"type":"string","description":"The id of the application to which this profile belongs to","minLength":32,"maxLength":32},"enabled":{"type":"boolean","description":"Flag to indicate if this profile is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"name":{"type":"string","description":"The profile name","minLength":1,"maxLength":100},"description":{"type":"string","description":"The description of the profile","maxLength":350,"pattern":"^[ -~\\s]*$"},"type":{"type":"string","description":"Type of the profile","enum":["SSHPublicKeyProfile","PublicCertificateProfile","AuthenticationProfile","SFTPProfile","FTPProfile","JWTKeyProfile","OAuthClientProfile"]}}},"TargetEndpoint":{"properties":{"name":{"type":"string","description":"The name of this endpoint","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The endpoint description","maxLength":350,"pattern":"^[ -~\\s]*$"},"spec":{"type":"string","description":"A reference to the backed API specifications, if available.","maxLength":512,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"specificationId":{"type":"string","description":"A reference to the backend Swagger''s resource id."},"url":{"type":"string","description":"Defines the network address of the backend service to which the TargetEndpoint\nforwards request messages\n","maxLength":256,"pattern":"^[\\w-_\\:\\.\\?\\/]*$"},"certChainId":{"type":"string","description":"A reference to the Cert Chain","minLength":32,"maxLength":32},"isInternal":{"type":"boolean","description":"Flag to indicate if this target endpoint lives in a managed hybrid environment or not","default":false}}},"Authorization":{"type":"object","required":["credential","credentialType","proxyId","runtimeGroupId"],"properties":{"proxyId":{"type":"string","description":"The API proxy id","minLength":32,"maxLength":32},"runtimeGroupId":{"type":"string","description":"The runtime group id","minLength":32,"maxLength":32},"credential":{"type":"string","description":"The credential object to be validated","maxLength":1250},"credentialType":{"type":"string","description":"The credential type","maxLength":32}},"description":"Authorization"},"JWTKeyProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["pemEncodedPublicKey"],"properties":{"pemEncodedPublicKey":{"type":"string","description":"The PEM-formatted RSA public key","maxLength":524288,"pattern":"^(-----BEGIN PUBLIC KEY-----([A-Za-z0-9+\\/=\\s]+)-----END PUBLIC KEY-----)*$"},"jwk":{"type":"string","description":"The JWK formatted RSA public key","maxLength":2048},"keyId":{"type":"string","description":"The key id - that is genereated by the server based on the pem encoded public key","minLength":1,"maxLength":50},"startTimestamp":{"type":"string","description":"The start time of the validity period, if not specified the JWT key will be valid from creation time. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"},"endTimestamp":{"type":"string","description":"The end time of the validity period, if not specified the JWT key will not expire. Date should be in ISO-8601 format (ig. \"2019-03-11T23:59:59.000Z\").","pattern":"^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]{3})?(Z)?$"}}}]},"APIProxy":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"API Proxy unique identifier"},"name":{"type":"string","description":"The name of the API proxy, which must be unique.","maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"state":{"$ref":"#/definitions/ProxyState"},"description":{"type":"string","description":"The description of the Api Proxy."},"metadata":{"$ref":"#/definitions/AuditMetadata"},"revision":{"type":"array","description":"The list of revisions for this proxy.","readOnly":true,"items":{"type":"integer","format":"int32"}},"revisions":{"type":"array","description":"The list of revisions for this proxy.","readOnly":true,"items":{"$ref":"#/definitions/APIProxyRevision"}},"externalReferences":{"type":"array","description":"The list of external references for this proxy.","readOnly":true,"items":{"$ref":"#/definitions/ProxyExternalReference"}},"tags":{"type":"array","description":"List of tags","items":{"type":"string","description":"must start with one of [A-Za-z0-9_] followed by whitespace, dash or underscore.","pattern":"^[\\w\\s-_()\\[\\]]*$"},"maxItems":30},"owningTeamId":{"type":"string","description":"The id of the owning team for this proxy.","minLength":32,"maxLength":36,"pattern":"^[\\w\\s-_()\\[\\]]*$"}}},"Team":{"type":"object","required":["name"],"properties":{"id":{"type":"string","description":"The id for the team","minLength":32,"maxLength":32},"name":{"type":"string","description":"The name of the team","minLength":1,"maxLength":100,"pattern":"^[\\w\\s-_()\\[\\]]*$"},"description":{"type":"string","description":"The description of the team","maxLength":350,"pattern":"^[ -~\\s]*$"},"email":{"type":"string","description":"The contact email address associated with the team","maxLength":100,"pattern":"^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$"},"phone":{"type":"string","description":"Contact phone number of the team","maxLength":100,"pattern":"^[0-9 .\\-()\\+]+$"},"enabled":{"type":"boolean","description":"Flag to indicate if this team is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"},"maxItems":30}},"description":"API Central team"},"ServiceAccountCertificate":{"type":"object","properties":{"publicKey":{"type":"string","description":"Pem encoded public key","maxLength":524288},"privateKey":{"type":"string","description":"Private key, valid only at service account creation when generateKeyPair is true, empty in all other cases"},"kid":{"type":"string","description":"Public key identifier, generated when uploading a new public key"}}},"PublicCertificateProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login","publicCertificate"],"properties":{"publicCertificate":{"type":"string","description":"The public certificate in PKCS7, CRT, DER - PEM or Base64 encoded format","maxLength":524288,"pattern":"^(-----BEGIN CERTIFICATE-----([A-Za-z0-9+\\/=\\s]+)-----END CERTIFICATE-----)|^(-----BEGIN PKCS7-----([A-Za-z0-9+\\/=\\s]+)-----END PKCS7-----)$"},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"EvaluatedPermission":{"type":"object","properties":{"id":{"type":"string","description":"The id for the permission","minLength":32,"maxLength":32},"evaluated":{"type":"string","description":"The permission string e.g. team:create","minLength":1,"maxLength":100,"pattern":"^[a-z0-9\\*\\:\\.-]*$"}}},"ProxyState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","DEPRECATED","RETIRED","PUBLISHED"],"default":"ACTIVE"},"retirementDate":{"type":"string","format":"date-time","description":"When to retire the proxy"}}},"HttpBasicAuthPolicy":{"allOf":[{"$ref":"#/definitions/PolicyReference"},{"type":"object","required":["password","username"],"properties":{"username":{"type":"string","description":"The username, no control chars or \":\" allowed","minLength":1,"maxLength":256,"pattern":"^[ -9\\s;-~]*$"},"password":{"type":"string","description":"The password, this is required but may be set to \"\", no control chars allowed","maxLength":256,"pattern":"^[ -~\\s]*$"}}}],"description":"HTTP Basic authentication policy details"},"LogicalInstanceState":{"type":"object","required":["value"],"properties":{"value":{"type":"string","enum":["ACTIVE","SUSPENDED"],"default":"ACTIVE"}}},"LogicalInstance":{"type":"object","required":["name","tenantId"],"properties":{"id":{"type":"string","description":"Logical Instance unique identifier"},"name":{"type":"string","description":"The name of the Logical Instance which must be unique."},"tenantId":{"type":"string","description":"The ID of the tenant owning this logical instance."},"state":{"$ref":"#/definitions/LogicalInstanceState"},"summary":{"type":"string"},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}}}},"Governance":{"type":"object","properties":{"requestPolicies":{"type":"array","description":"The pipeline of policies associated with the request (Inbound).","items":{"type":"string"}},"responsePolicies":{"type":"array","description":"The pipeline of policies associated with the response (Outbound).","items":{"type":"string"}},"methodOverrides":{"type":"array","items":{"$ref":"#/definitions/MethodOverride"}}}},"UserTeamRole":{"type":"object","required":["roles","teamId"],"properties":{"teamId":{"type":"string","description":"The id of the team","minLength":32,"maxLength":36},"roles":{"type":"array","description":"List of role ids","items":{"type":"string","description":"The id of the role the user has in the team","minLength":32,"maxLength":32}}}},"RuntimeGroup":{"type":"object","required":["environmentId","name"],"properties":{"id":{"type":"string","description":"Runtime Group unique identifier."},"name":{"type":"string","description":"The name of the Runtime Group which must be unique."},"state":{"$ref":"#/definitions/RuntimeGroupState"},"summary":{"type":"string"},"metadata":{"$ref":"#/definitions/AuditMetadata"},"tags":{"type":"array","description":"List of tags","items":{"type":"string"}},"endpointUrls":{"type":"array","description":"List of endpoint urls in this runtime group.","items":{"type":"string"}},"environmentId":{"type":"string","description":"The environment to which this runtime group belongs","minLength":32,"maxLength":32}}},"APIKey":{"type":"object","required":["applicationId"],"properties":{"id":{"type":"string","description":"The id of the API key","minLength":32,"maxLength":32},"apiKey":{"type":"string","description":"The API key. This value is auto-generated"},"secret":{"type":"string","description":"The API key secret. This value is auto-generated and returned only upon APIKey creation."},"applicationId":{"type":"string","description":"The id of the application to which this API key belongs","minLength":32,"maxLength":32},"startTimestamp":{"type":"string","format":"date-time","description":"The start time of the validity period, if not specified the API key will be valid from creation time"},"endTimestamp":{"type":"string","format":"date-time","description":"The end time of the validity period, if not specified the API key will not expire"},"enabled":{"type":"boolean","description":"Flag to indicate if this API key is enabled or not","default":true},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"SSHPublicKeyProfile":{"allOf":[{"$ref":"#/definitions/Profile"},{"type":"object","required":["login","publicKey"],"properties":{"publicKey":{"type":"string","description":"The public ssh-key encoded in format specified by RFC-4254 or in PEM encoded format","maxLength":524288,"pattern":"^(-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----)|(ssh-[\\w\\sAAAA][0-9A-Za-z+/]+[=]{0,3} ([^@]+@[^@]+))*$"},"login":{"type":"string","description":"The login name","minLength":1,"maxLength":256,"pattern":"^[^\\!|\\#|\\*|\\||\\,|\\;|\\:]*$"}}}]},"FeatureFlagOverride":{"type":"object","required":["instanceId"],"properties":{"id":{"type":"string","description":"Unique identifier","minLength":32,"maxLength":32},"instanceId":{"type":"string","description":"Tenant logical instance unique identifier","minLength":1,"maxLength":36},"enabled":{"type":"boolean","description":"Tenant feature flag override","default":false},"metadata":{"$ref":"#/definitions/AuditMetadata"}}},"ExportedTeamRoles":{"type":"object","properties":{"guid":{"type":"string","description":"The team guid"},"name":{"type":"string","description":"The team name"},"default":{"type":"boolean","description":"Indicates if is default team"},"roles":{"type":"array","description":"List of roles the user has in the team","items":{"type":"string"}}}}},"parameters":{"InstanceHeader":{"name":"X-Axway-Instance-Id","in":"header","description":"The logical instance id","required":false,"type":"string","maxLength":32,"minLength":32},"TeamHeader":{"name":"X-Axway-Team-Id","in":"header","description":"The currently selected team if the user is using the system within a team context","required":false,"type":"string","maxLength":36,"minLength":32},"OffsetParam":{"name":"offset","in":"query","description":"The offset index into the result set to start returning results from","required":false,"type":"integer","default":0},"CountParam":{"name":"count","in":"query","description":"The maximum number of entities to return","required":false,"type":"integer","default":20},"PageNumberParam":{"name":"page","in":"query","description":"The offset starting page number in the result set to start returning results from, starts at 1","required":false,"type":"integer","default":1},"PageSizeParam":{"name":"pageSize","in":"query","description":"The number of entities allowed in a page","required":false,"type":"integer","default":20},"SortParam":{"name":"sort","in":"query","description":"The field to sort result sets by, in ASC or DESC order","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},"SearchQuery":{"name":"query","in":"query","description":"Query string for filtering entity. Expressed in FIQL/RSQL language.","required":false,"type":"string"},"IdParam":{"name":"id","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"EnvironmentIdParam":{"name":"environmentId","in":"path","description":"The environment id","required":true,"type":"string","maxLength":32,"minLength":32},"InstanceIdSearchQuery":{"name":"query","in":"query","description":"Query string for specifing the \\\"instanceId\\\" expressed in FIQL/RSQL language","required":true,"type":"string"},"TeamIdParam":{"name":"teamId","in":"path","description":"The team id","required":true,"type":"string","maxLength":36,"minLength":32},"RequestUrl":{"name":"requestUrl","in":"path","description":"Path parameter to filter deployments starting with the same resource path as the request url.","required":true,"type":"string"},"ProxyIdParam":{"name":"proxyId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"KeyParam":{"name":"key","in":"path","description":"The key of the feature toggle","required":true,"type":"string","pattern":"^[A-Za-z0-9_\\-\\.]{3,32}$"},"RoleIdParam":{"name":"roleId","in":"path","description":"The role id","required":true,"type":"string","maxLength":32,"minLength":32},"UserIdParam":{"name":"userId","in":"path","description":"The user id","required":true,"type":"string","maxLength":32,"minLength":32},"ServiceAccountClientIdParam":{"name":"serviceAccountClientId","in":"path","description":"The service account''s client id","required":true,"type":"string","maxLength":37,"minLength":37},"ProductIdParam":{"name":"productId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"TimestampParam":{"name":"X-Axway-Configs-Ts","in":"header","required":false,"type":"integer","format":"int64"},"TenantHeader":{"name":"X-Axway-Tenant-Id","in":"header","description":"The tenant id","required":false,"type":"string","maxLength":32,"minLength":1},"ListenerIdParam":{"name":"listenerId","in":"path","description":"A listener id","required":true,"type":"string","maxLength":32,"minLength":32},"ApplicationIdParam":{"name":"applicationId","in":"path","description":"The application id","required":true,"type":"string","maxLength":32,"minLength":32},"RevisionParam":{"name":"revision","in":"path","description":"Revision number of the API.","required":true,"type":"integer","format":"int32"},"FeatureFlagIdParam":{"name":"featureFlagId","in":"path","description":"The feature flag id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"ServiceAccountTypeParam":{"name":"serviceAccountType","in":"path","description":"The service account''s type","required":true,"type":"string","maxLength":4,"minLength":4},"CertChainBodyParam":{"in":"body","name":"certChain","description":"Cert chain representation. It must have either url or pemEncoded property defined.","required":true,"schema":{"$ref":"#/definitions/CertChain"}},"ProfileIdParam":{"name":"profileId","in":"path","description":"The Profile id","required":true,"type":"string","maxLength":32,"minLength":32},"ApiKeyIdParam":{"name":"apiKeyId","in":"path","description":"The API key id","required":true,"type":"string","maxLength":32,"minLength":32},"ApiAccessIdParam":{"name":"apiAccessId","in":"path","description":"The API access id","required":true,"type":"string","maxLength":32,"minLength":32},"PublishedItemIdParam":{"name":"publishedItemId","in":"path","description":"The Id of the resource.","required":true,"type":"string","maxLength":32,"minLength":32},"PreferenceNameParam":{"name":"preferenceName","in":"path","description":"The user preference name","required":true,"type":"string","maxLength":100,"minLength":1},"FeatureFlagOverrideIdParam":{"name":"featureFlagOverrideId","in":"path","description":"The id of a feature flag override","required":true,"type":"string","maxLength":32,"minLength":32}}}')
