apiVersion: apps/v1
kind: Deployment
metadata:
  name: xds
  namespace: {{.Release.Namespace}}
  labels:
    app: {{ .Chart.Name }}-xds
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-xds
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-xds
    spec:
      initContainers:
        - name: wait-for-postgres
          imagePullPolicy: IfNotPresent
          image: alpine
          command: ['sh', '-c', 'for i in $(seq 1 200); do nc -z -w3 {{ .Release.Name }}-postgresql 5432 && exit 0 || (echo "Waiting for postgres" && sleep 3); done; exit 1;']
      containers:
      - name: xds
        image: {{ .Values.xds.repo }}/envoyxds:latest
        pullPolicy: IfNotPresent
        env:
          - name: XDS_PORT
            value: "12000"
          - name: XDS_TENANTS
            value: "{{ .Values.xds.tenants }}"
          - name: XDS_ROUTES
            value: "{{ .Values.xds.routes }}"
          - name: XDS_DOMAIN
            value: {{ .Values.xds.domain }}
          - name: XDS_PUMP
            value: "{{ .Values.xds.pumpInterval }}"
          - name: XDS_DNSREFRESHRATE
            value: "{{ .Values.xds.dnsRefreshRate }}"
          - name: XDS_RESPECTDNSTTL
            value: "{{ .Values.xds.respectDNSTTL }}"
          - name: XDS_SHARDS
            value: "{{ .Values.xds.shards }}"
          - name: XDS_DATABASEURL
            value: "{{ .Values.xds.databaseUrl }}"
          - name: XDS_USEPROXYPROTO
            value: "{{ .Values.xds.useProxyProto }}"
          - name: XDS_CACHEHOST
            value: "{{ .Values.xds.cacheHost }}"
        ports:
        - containerPort: 12000
          name: xds
        - containerPort: 12001
          name: shard
